[{"/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/admin/login/page.tsx":"1","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/admin/page.tsx":"2","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/admin/staff/page.tsx":"3","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/admin/tools/page.tsx":"4","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/confirmation/ConfirmationContent.tsx":"5","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/confirmation/page.tsx":"6","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/layout.tsx":"7","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/page.tsx":"8","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/request/new/page.tsx":"9","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/staff/page.tsx":"10","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/status/page.tsx":"11","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/track/page.tsx":"12","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/auth/ProtectedRoute.tsx":"13","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/core/Button/index.tsx":"14","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/core/Button/styles.ts":"15","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/core/Button/types.ts":"16","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/AdminLayout.tsx":"17","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/BaseLayout/index.tsx":"18","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/BaseLayout/styles.ts":"19","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/BaseLayout.tsx":"20","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/Footer/index.tsx":"21","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/Footer/styles.ts":"22","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/Footer/types.ts":"23","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/Header/index.tsx":"24","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/Header/styles.ts":"25","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/Header/types.ts":"26","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/PublicLayout.tsx":"27","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/types.ts":"28","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/providers/ThemeProvider/index.tsx":"29","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/providers/ThemeProvider.tsx":"30","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/providers/types.ts":"31","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/request/RecentRequestsList/index.tsx":"32","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/request/RequestConfirmation/index.tsx":"33","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/request/RequestForm/__tests__/RequestForm.test.tsx":"34","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/request/RequestForm/index.tsx":"35","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/request/RequestForm/types.ts":"36","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/request/RequestStatusCard/index.tsx":"37","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/shared/DateRangePicker/__tests__/DateRangePicker.test.tsx":"38","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/shared/DateRangePicker/index.tsx":"39","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/shared/FileUpload/__tests__/FileUpload.test.tsx":"40","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/shared/FileUpload/index.tsx":"41","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/staff/StaffDashboard/index.tsx":"42","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/contexts/AuthContext.tsx":"43","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/lib/firebase.ts":"44","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/services/requestService.ts":"45","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/theme/index.ts":"46","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/theme/theme.ts":"47","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/theme/tokens.ts":"48","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/types/index.d.ts":"49","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/utils/createEmotionCache.ts":"50","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/utils/seedTestData.ts":"51"},{"size":3663,"mtime":1758054585692,"results":"52","hashOfConfig":"53"},{"size":244,"mtime":1758054585682,"results":"54","hashOfConfig":"53"},{"size":1134,"mtime":1758054585692,"results":"55","hashOfConfig":"53"},{"size":2370,"mtime":1758054585723,"results":"56","hashOfConfig":"53"},{"size":2476,"mtime":1758045968309,"results":"57","hashOfConfig":"53"},{"size":522,"mtime":1758045968282,"results":"58","hashOfConfig":"53"},{"size":524,"mtime":1758054585670,"results":"59","hashOfConfig":"53"},{"size":681,"mtime":1758054585670,"results":"60","hashOfConfig":"53"},{"size":444,"mtime":1757458454145,"results":"61","hashOfConfig":"53"},{"size":706,"mtime":1758051853548,"results":"62","hashOfConfig":"53"},{"size":8934,"mtime":1758054585670,"results":"63","hashOfConfig":"53"},{"size":232,"mtime":1758054585723,"results":"64","hashOfConfig":"53"},{"size":1684,"mtime":1758054585692,"results":"65","hashOfConfig":"53"},{"size":1282,"mtime":1757458454107,"results":"66","hashOfConfig":"53"},{"size":845,"mtime":1757458454108,"results":"67","hashOfConfig":"53"},{"size":476,"mtime":1757458454109,"results":"68","hashOfConfig":"53"},{"size":2630,"mtime":1758054585685,"results":"69","hashOfConfig":"53"},{"size":436,"mtime":1757458454115,"results":"70","hashOfConfig":"53"},{"size":468,"mtime":1757458454116,"results":"71","hashOfConfig":"53"},{"size":1699,"mtime":1758051853545,"results":"72","hashOfConfig":"53"},{"size":1039,"mtime":1757458454112,"results":"73","hashOfConfig":"53"},{"size":800,"mtime":1757458454112,"results":"74","hashOfConfig":"53"},{"size":56,"mtime":1757458454113,"results":"75","hashOfConfig":"53"},{"size":827,"mtime":1757458454117,"results":"76","hashOfConfig":"53"},{"size":706,"mtime":1757458454118,"results":"77","hashOfConfig":"53"},{"size":75,"mtime":1757458454119,"results":"78","hashOfConfig":"53"},{"size":2106,"mtime":1758054585677,"results":"79","hashOfConfig":"53"},{"size":94,"mtime":1757459563286,"results":"80","hashOfConfig":"53"},{"size":418,"mtime":1757458454121,"results":"81","hashOfConfig":"53"},{"size":1621,"mtime":1758045968263,"results":"82","hashOfConfig":"53"},{"size":97,"mtime":1757459563287,"results":"83","hashOfConfig":"53"},{"size":2038,"mtime":1757458454123,"results":"84","hashOfConfig":"53"},{"size":8036,"mtime":1758045968282,"results":"85","hashOfConfig":"53"},{"size":3746,"mtime":1758045967984,"results":"86","hashOfConfig":"53"},{"size":7697,"mtime":1758486211927,"results":"87","hashOfConfig":"53"},{"size":1139,"mtime":1758045967954,"results":"88","hashOfConfig":"53"},{"size":1704,"mtime":1757458454125,"results":"89","hashOfConfig":"53"},{"size":6567,"mtime":1758045967984,"results":"90","hashOfConfig":"53"},{"size":5726,"mtime":1758045967984,"results":"91","hashOfConfig":"53"},{"size":4969,"mtime":1757528883965,"results":"92","hashOfConfig":"53"},{"size":6819,"mtime":1758486223166,"results":"93","hashOfConfig":"53"},{"size":18746,"mtime":1758246761628,"results":"94","hashOfConfig":"53"},{"size":2767,"mtime":1758054585692,"results":"95","hashOfConfig":"53"},{"size":2018,"mtime":1758045968098,"results":"96","hashOfConfig":"53"},{"size":5862,"mtime":1758486233358,"results":"97","hashOfConfig":"53"},{"size":488,"mtime":1757459075517,"results":"98","hashOfConfig":"53"},{"size":3740,"mtime":1757458454155,"results":"99","hashOfConfig":"53"},{"size":2284,"mtime":1757458454156,"results":"100","hashOfConfig":"53"},{"size":547,"mtime":1757459075517,"results":"101","hashOfConfig":"53"},{"size":145,"mtime":1757459075517,"results":"102","hashOfConfig":"53"},{"size":3946,"mtime":1758051853557,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"107"},"1gbmldb",{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","suppressedMessages":"113","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"118"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"122"},{"filePath":"123","messages":"124","suppressedMessages":"125","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"161"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"168"},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"172"},{"filePath":"173","messages":"174","suppressedMessages":"175","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"176"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"180"},{"filePath":"181","messages":"182","suppressedMessages":"183","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"184"},{"filePath":"185","messages":"186","suppressedMessages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"188","messages":"189","suppressedMessages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"191","messages":"192","suppressedMessages":"193","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"194"},{"filePath":"195","messages":"196","suppressedMessages":"197","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"198"},{"filePath":"199","messages":"200","suppressedMessages":"201","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"202","messages":"203","suppressedMessages":"204","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"205"},{"filePath":"206","messages":"207","suppressedMessages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","suppressedMessages":"211","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"212"},{"filePath":"213","messages":"214","suppressedMessages":"215","errorCount":15,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":15,"fixableWarningCount":0,"source":"216"},{"filePath":"217","messages":"218","suppressedMessages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"220","messages":"221","suppressedMessages":"222","errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"223"},{"filePath":"224","messages":"225","suppressedMessages":"226","errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","suppressedMessages":"230","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"231"},{"filePath":"232","messages":"233","suppressedMessages":"234","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":"235"},{"filePath":"236","messages":"237","suppressedMessages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"239","messages":"240","suppressedMessages":"241","errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":6,"fixableWarningCount":0,"source":"242"},{"filePath":"243","messages":"244","suppressedMessages":"245","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"246"},{"filePath":"247","messages":"248","suppressedMessages":"249","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"250"},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"254"},{"filePath":"255","messages":"256","suppressedMessages":"257","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"258"},{"filePath":"259","messages":"260","suppressedMessages":"261","errorCount":28,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":28,"fixableWarningCount":0,"source":"262"},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":9,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":9,"fixableWarningCount":0,"source":"266"},{"filePath":"267","messages":"268","suppressedMessages":"269","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"270"},{"filePath":"271","messages":"272","suppressedMessages":"273","errorCount":8,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":8,"fixableWarningCount":0,"source":"274"},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":"281"},{"filePath":"282","messages":"283","suppressedMessages":"284","errorCount":19,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":19,"fixableWarningCount":0,"source":"285"},{"filePath":"286","messages":"287","suppressedMessages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"289","messages":"290","suppressedMessages":"291","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"292","messages":"293","suppressedMessages":"294","errorCount":17,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":17,"fixableWarningCount":0,"source":"295"},"/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/admin/login/page.tsx",["296","297","298"],[],"'use client';\n\nimport React, { useState } from 'react';\nimport { \n  Box, \n  Paper, \n  TextField, \n  Button, \n  Typography, \n  Alert, \n  Container,\n  CircularProgress \n} from '@mui/material';\nimport { Login as LoginIcon } from '@mui/icons-material';\nimport { useAuth } from '../../../contexts/AuthContext';\nimport { AuthProvider } from '../../../contexts/AuthContext';\nimport { useRouter } from 'next/navigation';\n\nfunction LoginPageContent() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const { login, isLoading } = useAuth();\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n    setError('');\n\n    const success = await login(email, password);\n    if (success) {\n      window.location.href = '/admin/staff';\n    } else {\n      setError('Invalid email or password');\n    }\n  };\n\n  return (\n    <Container maxWidth=\"sm\">\n      <Box sx={{ \n        display: 'flex', \n        flexDirection: 'column', \n        alignItems: 'center', \n        minHeight: '100vh',\n        justifyContent: 'center'\n      }}>\n        <Paper elevation={3} sx={{ p: 4, width: '100%', maxWidth: 400 }}>\n          <Box sx={{ textAlign: 'center', mb: 3 }}>\n            <LoginIcon sx={{ fontSize: 48, color: 'primary.main', mb: 2 }} />\n            <Typography variant=\"h4\" gutterBottom>\n              Staff Login\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Access the Public Records Management System\n            </Typography>\n          </Box>\n\n          {error && (\n            <Alert severity=\"error\" sx={{ mb: 2 }}>\n              {error}\n            </Alert>\n          )}\n\n          <Box component=\"form\" onSubmit={handleSubmit}>\n            <TextField\n              fullWidth\n              label=\"Email\"\n              type=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              margin=\"normal\"\n              required\n              autoFocus\n            />\n            <TextField\n              fullWidth\n              label=\"Password\"\n              type=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              margin=\"normal\"\n              required\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              size=\"large\"\n              disabled={isLoading}\n              startIcon={isLoading ? <CircularProgress size={20} /> : <LoginIcon />}\n              sx={{ mt: 3, mb: 2 }}\n            >\n              {isLoading ? 'Signing In...' : 'Sign In'}\n            </Button>\n          </Box>\n\n          <Box sx={{ mt: 3, p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>\n            <Typography variant=\"caption\" color=\"text.secondary\" gutterBottom display=\"block\">\n              Development Credentials:\n            </Typography>\n            <Typography variant=\"body2\" sx={{ fontFamily: 'monospace', fontSize: '0.75rem' }}>\n              <strong>Admin:</strong> admin@records.gov / admin123<br />\n              <strong>Staff:</strong> staff@records.gov / staff123<br />\n              <strong>Legal:</strong> legal@records.gov / legal123\n            </Typography>\n          </Box>\n        </Paper>\n\n        <Button\n          component=\"a\"\n          href=\"/\"\n          variant=\"text\"\n          sx={{ mt: 2 }}\n        >\n          ← Back to Public Portal\n        </Button>\n      </Box>\n    </Container>\n  );\n}\n\nexport default function LoginPage() {\n  return (\n    <AuthProvider>\n      <LoginPageContent />\n    </AuthProvider>\n  );\n}","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/admin/page.tsx",[],[],"/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/admin/staff/page.tsx",["299"],[],"'use client';\n\nimport React, { useState } from 'react';\nimport { Box } from '@mui/material';\nimport { AdminLayout } from '../../../components/layouts/AdminLayout';\nimport { ProtectedRoute } from '../../../components/auth/ProtectedRoute';\nimport { AuthProvider } from '../../../contexts/AuthContext';\nimport { StaffDashboard } from '../../../components/staff/StaffDashboard';\nimport { StoredRequest } from '../../../services/requestService';\n\nfunction StaffPageContent() {\n  const [selectedRequest, setSelectedRequest] = useState<StoredRequest | null>(null);\n\n  const handleRequestSelect = (request: StoredRequest) => {\n    setSelectedRequest(request);\n    // TODO: Open request details drawer/modal\n    console.log('Selected request:', request);\n  };\n\n  return (\n    <ProtectedRoute>\n      <AdminLayout>\n        <Box>\n          <StaffDashboard onRequestSelect={handleRequestSelect} />\n          {/* TODO: Add request details drawer/modal here */}\n        </Box>\n      </AdminLayout>\n    </ProtectedRoute>\n  );\n}\n\nexport default function StaffPage() {\n  return (\n    <AuthProvider>\n      <StaffPageContent />\n    </AuthProvider>\n  );\n}","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/admin/tools/page.tsx",["300"],[],"'use client';\n\nimport { useState } from 'react';\nimport { Box, Button, Typography, Alert, CircularProgress } from '@mui/material';\nimport { AdminLayout } from '../../../components/layouts/AdminLayout';\nimport { ProtectedRoute } from '../../../components/auth/ProtectedRoute';\nimport { AuthProvider } from '../../../contexts/AuthContext';\nimport { seedTestData } from '../../../utils/seedTestData';\n\nfunction AdminToolsContent() {\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState<{ type: 'success' | 'error'; text: string } | null>(null);\n\n  const handleSeedData = async () => {\n    setLoading(true);\n    setMessage(null);\n\n    try {\n      await seedTestData();\n      setMessage({ type: 'success', text: 'Test data seeded successfully!' });\n    } catch (error) {\n      console.error('Error seeding data:', error);\n      setMessage({ type: 'error', text: 'Failed to seed test data. Check console for details.' });\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <ProtectedRoute requiredRole=\"admin\">\n      <AdminLayout>\n        <Box sx={{ p: 4, maxWidth: 600, mx: 'auto' }}>\n          <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n            Admin Tools\n          </Typography>\n          \n          <Typography variant=\"body1\" color=\"text.secondary\" sx={{ mb: 3 }}>\n            Development utilities for testing and data management.\n          </Typography>\n\n          {message && (\n            <Alert severity={message.type} sx={{ mb: 3 }}>\n              {message.text}\n            </Alert>\n          )}\n\n          <Box sx={{ display: 'flex', flexDirection: 'column', gap: 2 }}>\n            <Button\n              variant=\"contained\"\n              onClick={handleSeedData}\n              disabled={loading}\n              startIcon={loading ? <CircularProgress size={20} /> : null}\n              size=\"large\"\n            >\n              {loading ? 'Seeding Data...' : 'Seed Test Data'}\n            </Button>\n            \n            <Typography variant=\"caption\" color=\"text.secondary\">\n              This will create 7 sample requests for testing the staff dashboard.\n            </Typography>\n          </Box>\n        </Box>\n      </AdminLayout>\n    </ProtectedRoute>\n  );\n}\n\nexport default function AdminToolsPage() {\n  return (\n    <AuthProvider>\n      <AdminToolsContent />\n    </AuthProvider>\n  );\n}","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/confirmation/ConfirmationContent.tsx",["301"],[],"'use client';\n\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'next/navigation';\nimport { RequestConfirmation } from '../../components/request/RequestConfirmation';\nimport { StoredRequest, getRequestByTrackingId } from '../../services/requestService';\nimport { Box, CircularProgress, Alert, Typography } from '@mui/material';\n\nexport default function ConfirmationContent() {\n  const searchParams = useSearchParams();\n  const trackingId = searchParams.get('trackingId');\n  \n  const [request, setRequest] = useState<StoredRequest | null>(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n\n  useEffect(() => {\n    const fetchRequest = async () => {\n      if (!trackingId) {\n        setError('No tracking ID provided');\n        setLoading(false);\n        return;\n      }\n\n      try {\n        const requestData = await getRequestByTrackingId(trackingId);\n        if (!requestData) {\n          setError('Request not found');\n        } else {\n          setRequest(requestData);\n        }\n      } catch (err) {\n        setError(err instanceof Error ? err.message : 'Failed to load request');\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchRequest();\n  }, [trackingId]);\n\n  const handleCopyTrackingId = async () => {\n    if (trackingId) {\n      try {\n        await navigator.clipboard.writeText(trackingId);\n        // You might want to show a toast notification here\n        console.log('Tracking ID copied to clipboard');\n      } catch (err) {\n        console.error('Failed to copy tracking ID:', err);\n      }\n    }\n  };\n\n  const handleStartNewRequest = () => {\n    window.location.href = '/';\n  };\n\n  if (loading) {\n    return (\n      <Box \n        display=\"flex\" \n        justifyContent=\"center\" \n        alignItems=\"center\" \n        minHeight=\"400px\"\n      >\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error || !request) {\n    return (\n      <Box sx={{ maxWidth: 600, mx: 'auto', p: 3 }}>\n        <Alert severity=\"error\" sx={{ mb: 2 }}>\n          {error || 'Request not found'}\n        </Alert>\n        <Typography variant=\"body1\">\n          Please check your tracking ID and try again, or contact support if the problem persists.\n        </Typography>\n      </Box>\n    );\n  }\n\n  return (\n    <RequestConfirmation\n      request={request}\n      onCopyTrackingId={handleCopyTrackingId}\n      onStartNewRequest={handleStartNewRequest}\n    />\n  );\n}","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/confirmation/page.tsx",["302"],[],"'use client';\n\nimport { Suspense } from 'react';\nimport { Box, CircularProgress } from '@mui/material';\nimport ConfirmationContent from './ConfirmationContent';\n\nfunction LoadingFallback() {\n  return (\n    <Box \n      display=\"flex\" \n      justifyContent=\"center\" \n      alignItems=\"center\" \n      minHeight=\"400px\"\n    >\n      <CircularProgress />\n    </Box>\n  );\n}\n\nexport default function ConfirmationPage() {\n  return (\n    <Suspense fallback={<LoadingFallback />}>\n      <ConfirmationContent />\n    </Suspense>\n  );\n}","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/layout.tsx",["303","304","305","306"],[],"import type { Metadata } from \"next\";\nimport React from 'react';\nimport { ThemeProvider } from '@/components/providers/ThemeProvider';\n\nexport const metadata: Metadata = {\n  title: \"Public Records Request Portal\",\n  description: \"Submit and manage public records requests\",\n};\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  return (\n    <html lang=\"en\">\n      <body>\n        <ThemeProvider>\n          {children}\n        </ThemeProvider>\n      </body>\n    </html>\n  );\n}\n","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/page.tsx",["307","308"],[],"import { RequestForm } from '../components/request/RequestForm';\nimport { PublicLayout } from '../components/layouts/PublicLayout';\nimport { Box, Typography } from '@mui/material';\n\nexport default function HomePage() {\n  return (\n    <PublicLayout>\n      <Box sx={{ py: 4 }}>\n        <Typography variant=\"h3\" component=\"h1\" gutterBottom align=\"center\">\n          Public Records Request\n        </Typography>\n        <Typography variant=\"body1\" paragraph align=\"center\" color=\"text.secondary\">\n          Submit a request for public records. Fill out the form below and we'll process your request.\n        </Typography>\n        <RequestForm />\n      </Box>\n    </PublicLayout>\n  );\n}","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/request/new/page.tsx",["309"],[],"import { Container, Typography, Paper } from '@mui/material';\nimport { RequestForm } from '@/components/request/RequestForm';\n\nexport default function NewRequest() {\n  return (\n    <Container maxWidth=\"md\" sx={{ py: 4 }}>\n      <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n        Submit a New Public Records Request\n      </Typography>\n      \n      <Paper sx={{ p: 3 }}>\n        <RequestForm />\n      </Paper>\n    </Container>\n  );\n}\n","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/staff/page.tsx",["310"],[],"'use client';\n\nimport React, { useState } from 'react';\nimport { Box } from '@mui/material';\nimport { StaffDashboard } from '../../components/staff/StaffDashboard';\nimport { StoredRequest } from '../../services/requestService';\n\nexport default function StaffPage() {\n  const [selectedRequest, setSelectedRequest] = useState<StoredRequest | null>(null);\n\n  const handleRequestSelect = (request: StoredRequest) => {\n    setSelectedRequest(request);\n    // TODO: Open request details drawer/modal\n    console.log('Selected request:', request);\n  };\n\n  return (\n    <Box>\n      <StaffDashboard onRequestSelect={handleRequestSelect} />\n      {/* TODO: Add request details drawer/modal here */}\n    </Box>\n  );\n}","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/status/page.tsx",["311","312","313","314"],[],"'use client';\n\nimport React, { useState } from 'react';\nimport {\n  Box,\n  TextField,\n  Button,\n  Typography,\n  Paper,\n  Alert,\n  CircularProgress,\n  Card,\n  CardContent,\n  Chip,\n  Grid,\n  Divider\n} from '@mui/material';\nimport { Search as SearchIcon } from '@mui/icons-material';\nimport { format } from 'date-fns';\nimport { StoredRequest, getRequestByTrackingId } from '../../services/requestService';\nimport { PublicLayout } from '../../components/layouts/PublicLayout';\n\nexport default function StatusLookupPage() {\n  const [trackingId, setTrackingId] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n  const [request, setRequest] = useState<StoredRequest | null>(null);\n\n  const handleSearch = async () => {\n    if (!trackingId.trim()) {\n      setError('Please enter a tracking ID');\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n    setRequest(null);\n\n    try {\n      const requestData = await getRequestByTrackingId(trackingId.trim());\n      if (!requestData) {\n        setError('Request not found. Please check your tracking ID and try again.');\n      } else {\n        setRequest(requestData);\n      }\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to retrieve request');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleKeyPress = (event: React.KeyboardEvent) => {\n    if (event.key === 'Enter') {\n      handleSearch();\n    }\n  };\n\n  const formatDate = (timestamp: any) => {\n    if (!timestamp) return '';\n    const date = timestamp.toDate ? timestamp.toDate() : new Date(timestamp);\n    return format(date, 'MMMM d, yyyy \\'at\\' h:mm a');\n  };\n\n  const getDepartmentDisplayName = (department: string) => {\n    const departments: Record<string, string> = {\n      'police': 'Police Department',\n      'fire': 'Fire Department',\n      'clerk': 'City Clerk',\n      'finance': 'Finance Department',\n      'other': 'Other'\n    };\n    return departments[department] || department;\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'submitted': return 'primary';\n      case 'processing': return 'info';\n      case 'under_review': return 'warning';\n      case 'completed': return 'success';\n      case 'rejected': return 'error';\n      default: return 'default';\n    }\n  };\n\n  const getStatusDescription = (status: string) => {\n    switch (status) {\n      case 'submitted':\n        return 'Your request has been received and is waiting to be processed.';\n      case 'processing':\n        return 'Your request is currently being processed by the department.';\n      case 'under_review':\n        return 'Your request is under review. Additional approval may be required.';\n      case 'completed':\n        return 'Your request has been completed and is ready for delivery.';\n      case 'rejected':\n        return 'Your request has been rejected. Please contact the department for more information.';\n      default:\n        return 'Status unknown.';\n    }\n  };\n\n  return (\n    <PublicLayout>\n      <Box sx={{ maxWidth: 800, mx: 'auto', p: 3 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom align=\"center\">\n          Track Your Request\n        </Typography>\n        <Typography variant=\"body1\" paragraph align=\"center\" color=\"text.secondary\">\n          Enter your tracking ID to check the status of your public records request.\n        </Typography>\n\n      {/* Search Form */}\n      <Paper elevation={2} sx={{ p: 3, mb: 3 }}>\n        <Box sx={{ display: 'flex', gap: 2, alignItems: 'flex-start' }}>\n          <TextField\n            fullWidth\n            label=\"Tracking ID\"\n            placeholder=\"Enter your tracking ID (e.g., PR-123456-ABCD)\"\n            value={trackingId}\n            onChange={(e) => setTrackingId(e.target.value)}\n            onKeyPress={handleKeyPress}\n            error={!!error && !request}\n            helperText={error && !request ? error : 'Enter the tracking ID from your confirmation email or receipt'}\n            disabled={loading}\n          />\n          <Button\n            variant=\"contained\"\n            startIcon={loading ? <CircularProgress size={16} color=\"inherit\" /> : <SearchIcon />}\n            onClick={handleSearch}\n            disabled={loading || !trackingId.trim()}\n            sx={{ minWidth: 120, height: 56 }}\n          >\n            {loading ? 'Searching...' : 'Search'}\n          </Button>\n        </Box>\n      </Paper>\n\n      {/* Error Alert */}\n      {error && !request && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          {error}\n        </Alert>\n      )}\n\n      {/* Request Details */}\n      {request && (\n        <Card elevation={2}>\n          <CardContent>\n            <Box sx={{ mb: 3 }}>\n              <Typography variant=\"h5\" gutterBottom>\n                Request Status\n              </Typography>\n              <Box sx={{ display: 'flex', alignItems: 'center', gap: 2, mb: 2 }}>\n                <Chip \n                  label={request.status.replace('_', ' ').toUpperCase()} \n                  color={getStatusColor(request.status)}\n                  size=\"medium\"\n                />\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Last updated: {formatDate(request.updatedAt)}\n                </Typography>\n              </Box>\n              <Typography variant=\"body1\" color=\"text.secondary\">\n                {getStatusDescription(request.status)}\n              </Typography>\n            </Box>\n\n            <Divider sx={{ my: 3 }} />\n\n            <Typography variant=\"h6\" gutterBottom>\n              Request Details\n            </Typography>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Tracking ID\n                </Typography>\n                <Typography variant=\"body1\" fontWeight=\"medium\">\n                  {request.trackingId}\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Submitted\n                </Typography>\n                <Typography variant=\"body1\">\n                  {formatDate(request.submittedAt)}\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Department\n                </Typography>\n                <Typography variant=\"body1\">\n                  {getDepartmentDisplayName(request.department)}\n                </Typography>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Contact Email\n                </Typography>\n                <Typography variant=\"body1\">\n                  {request.contactEmail}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Request Title\n                </Typography>\n                <Typography variant=\"body1\">\n                  {request.title}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Date Range\n                </Typography>\n                <Typography variant=\"body1\">\n                  {request.dateRange.startDate} to {request.dateRange.endDate}\n                  {request.dateRange.preset && ` (${request.dateRange.preset})`}\n                </Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Description\n                </Typography>\n                <Typography variant=\"body1\">\n                  {request.description}\n                </Typography>\n              </Grid>\n              {request.attachmentCount > 0 && (\n                <Grid item xs={12}>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Attachments\n                  </Typography>\n                  <Typography variant=\"body1\">\n                    {request.attachmentCount} file(s) uploaded\n                  </Typography>\n                </Grid>\n              )}\n            </Grid>\n          </CardContent>\n        </Card>\n      )}\n\n      {/* Help Section */}\n      <Box sx={{ mt: 4, p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>\n        <Typography variant=\"h6\" gutterBottom>\n          Need Help?\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          If you can't find your request or have questions about the status, please contact the relevant department directly or call our main office for assistance.\n        </Typography>\n      </Box>\n    </Box>\n    </PublicLayout>\n  );\n}","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/app/track/page.tsx",[],[],"/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/auth/ProtectedRoute.tsx",["315","316","317","318"],[],"'use client';\n\nimport React, { useEffect } from 'react';\nimport { useAuth } from '../../contexts/AuthContext';\nimport { useRouter } from 'next/navigation';\nimport { Box, CircularProgress, Typography } from '@mui/material';\n\ninterface ProtectedRouteProps {\n  children: React.ReactNode;\n  requiredRole?: 'admin' | 'staff' | 'legal_reviewer';\n}\n\nexport function ProtectedRoute({ children, requiredRole }: ProtectedRouteProps) {\n  const { user, isLoading, isAuthenticated } = useAuth();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (!isLoading && !isAuthenticated) {\n      window.location.href = '/admin/login';\n    }\n  }, [isLoading, isAuthenticated]);\n\n  if (isLoading) {\n    return (\n      <Box sx={{ \n        display: 'flex', \n        flexDirection: 'column',\n        alignItems: 'center', \n        justifyContent: 'center', \n        minHeight: '100vh' \n      }}>\n        <CircularProgress size={48} />\n        <Typography variant=\"body1\" sx={{ mt: 2 }}>\n          Checking authentication...\n        </Typography>\n      </Box>\n    );\n  }\n\n  if (!isAuthenticated) {\n    return null; // Will redirect to login\n  }\n\n  if (requiredRole && user?.role !== requiredRole && user?.role !== 'admin') {\n    return (\n      <Box sx={{ \n        display: 'flex', \n        flexDirection: 'column',\n        alignItems: 'center', \n        justifyContent: 'center', \n        minHeight: '100vh' \n      }}>\n        <Typography variant=\"h6\" color=\"error\">\n          Access Denied\n        </Typography>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          You don't have permission to access this page.\n        </Typography>\n      </Box>\n    );\n  }\n\n  return <>{children}</>;\n}","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/core/Button/index.tsx",["319"],[],"import { CircularProgress } from '@mui/material';\nimport { type ButtonProps } from './types';\nimport { StyledButton } from './styles';\n\nexport const Button = ({\n  children,\n  size = 'md',\n  variant = 'primary',\n  loading = false,\n  disabled,\n  ...props\n}: ButtonProps) => {\n  const getMuiVariant = (variant: ButtonProps['variant']) => {\n    switch (variant) {\n      case 'primary':\n        return 'contained';\n      case 'secondary':\n        return 'contained';\n      case 'outline':\n        return 'outlined';\n      case 'text':\n        return 'text';\n      default:\n        return 'contained';\n    }\n  };\n\n  const getMuiColor = (variant: ButtonProps['variant']) => {\n    switch (variant) {\n      case 'primary':\n        return 'primary';\n      case 'secondary':\n        return 'secondary';\n      default:\n        return 'primary';\n    }\n  };\n\n  return (\n    <StyledButton\n      $size={size}\n      variant={getMuiVariant(variant)}\n      color={getMuiColor(variant)}\n      disabled={loading || disabled}\n      {...props}\n    >\n      {loading ? (\n        <CircularProgress\n          size={size === 'sm' ? 16 : size === 'lg' ? 24 : 20}\n          color=\"inherit\"\n        />\n      ) : (\n        children\n      )}\n    </StyledButton>\n  );\n};\n\nexport type { ButtonProps } from './types';\n","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/core/Button/styles.ts",["320"],[],"import { type Theme } from '@/theme/theme';\nimport { Button as MuiButton, styled } from '@mui/material';\nimport { tokens } from '@/theme/tokens';\n\nexport const StyledButton = styled(MuiButton)<{ $size?: 'sm' | 'md' | 'lg' }>(\n  ({ theme, $size = 'md' }) => {\n    const sizes = {\n      sm: {\n        padding: `${tokens.spacing.xs} ${tokens.spacing.sm}`,\n        fontSize: tokens.typography.fontSizes.sm,\n      },\n      md: {\n        padding: `${tokens.spacing.sm} ${tokens.spacing.md}`,\n        fontSize: tokens.typography.fontSizes.md,\n      },\n      lg: {\n        padding: `${tokens.spacing.md} ${tokens.spacing.lg}`,\n        fontSize: tokens.typography.fontSizes.lg,\n      },\n    };\n\n    return {\n      ...sizes[$size],\n      transition: 'all 0.2s ease-in-out',\n      '&:hover': {\n        transform: 'translateY(-1px)',\n      },\n    };\n  }\n);\n","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/core/Button/types.ts",[],[],"/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/AdminLayout.tsx",["321"],[],"'use client';\n\nimport React from 'react';\nimport { Box, AppBar, Toolbar, Typography, Container, Button, Chip } from '@mui/material';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\nimport { ExitToApp } from '@mui/icons-material';\nimport { useAuth } from '../../contexts/AuthContext';\n\ninterface AdminLayoutProps {\n  children: React.ReactNode;\n}\n\nexport function AdminLayout({ children }: AdminLayoutProps) {\n  const pathname = usePathname();\n  const { logout } = useAuth();\n\n  const handleLogout = () => {\n    logout();\n    window.location.href = '/';\n  };\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', minHeight: '100vh' }}>\n      <AppBar position=\"static\" sx={{ bgcolor: 'primary.dark' }}>\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            <Link href=\"/admin\" style={{ color: 'inherit', textDecoration: 'none' }}>\n              Admin Console\n            </Link>\n          </Typography>\n          \n          {/* Admin Status Indicator */}\n          <Chip \n            label=\"Staff Access\" \n            color=\"secondary\" \n            size=\"small\" \n            sx={{ mr: 3 }}\n          />\n          \n          {/* Admin Navigation */}\n          <Box sx={{ display: 'flex', gap: 2, alignItems: 'center' }}>\n            <Button \n              color=\"inherit\" \n              component={Link} \n              href=\"/admin/staff\"\n              sx={{ fontWeight: pathname === '/admin/staff' ? 'bold' : 'normal' }}\n            >\n              Request Queue\n            </Button>\n            <Button \n              color=\"inherit\" \n              component={Link} \n              href=\"/admin/tools\"\n              sx={{ fontWeight: pathname === '/admin/tools' ? 'bold' : 'normal' }}\n            >\n              Admin Tools\n            </Button>\n            <Button \n              color=\"inherit\"\n              onClick={handleLogout}\n              startIcon={<ExitToApp />}\n              variant=\"outlined\"\n              sx={{ ml: 2 }}\n            >\n              Logout\n            </Button>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      \n      <Box component=\"main\" sx={{ flexGrow: 1, py: 3, bgcolor: 'grey.50' }}>\n        <Container maxWidth=\"xl\">\n          {children}\n        </Container>\n      </Box>\n      \n      <Box component=\"footer\" sx={{ py: 2, bgcolor: 'grey.200' }}>\n        <Container maxWidth=\"xl\">\n          <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n            Staff Portal - Public Records Management System\n          </Typography>\n        </Container>\n      </Box>\n    </Box>\n  );\n}","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/BaseLayout/index.tsx",["322"],[],"import { type ReactNode } from 'react';\nimport { LayoutRoot, LayoutContent } from './styles';\nimport { Header } from '../Header';\nimport { Footer } from '../Footer';\n\ninterface BaseLayoutProps {\n  children: ReactNode;\n}\n\nexport const BaseLayout = ({ children }: BaseLayoutProps) => {\n  return (\n    <LayoutRoot>\n      <Header />\n      <LayoutContent>\n        {children}\n      </LayoutContent>\n      <Footer />\n    </LayoutRoot>\n  );\n};\n","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/BaseLayout/styles.ts",["323"],[],"import { styled } from '@mui/material/styles';\nimport { Box } from '@mui/material';\n\nexport const LayoutRoot = styled(Box)(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'column',\n  minHeight: '100vh',\n  backgroundColor: theme.palette.background.default,\n}));\n\nexport const LayoutContent = styled(Box)(({ theme }) => ({\n  flex: '1 1 auto',\n  width: '100%',\n  padding: theme.spacing(3),\n  [theme.breakpoints.up('lg')]: {\n    padding: theme.spacing(4),\n  },\n}));\n","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/BaseLayout.tsx",["324"],[],"'use client';\n\nimport React from 'react';\nimport { Box, AppBar, Toolbar, Typography, Container, Button } from '@mui/material';\nimport Link from 'next/link';\n\ninterface BaseLayoutProps {\n  children: React.ReactNode;\n}\n\nexport function BaseLayout({ children }: BaseLayoutProps) {\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', minHeight: '100vh' }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            <Link href=\"/\" style={{ color: 'inherit', textDecoration: 'none' }}>\n              Public Records Portal\n            </Link>\n          </Typography>\n          <Box sx={{ display: 'flex', gap: 2 }}>\n            <Button color=\"inherit\" component={Link} href=\"/\">\n              Submit Request\n            </Button>\n            <Button color=\"inherit\" component={Link} href=\"/status\">\n              Track Request\n            </Button>\n            <Button color=\"inherit\" component={Link} href=\"/staff\">\n              Staff Console\n            </Button>\n            <Button color=\"inherit\" component={Link} href=\"/admin\">\n              Admin Tools\n            </Button>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      \n      <Box component=\"main\" sx={{ flexGrow: 1, py: 3 }}>\n        <Container maxWidth=\"lg\">\n          {children}\n        </Container>\n      </Box>\n      \n      <Box component=\"footer\" sx={{ py: 2, bgcolor: 'grey.100' }}>\n        <Container maxWidth=\"lg\">\n          <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n            © 2024 Public Records Portal. All rights reserved.\n          </Typography>\n        </Container>\n      </Box>\n    </Box>\n  );\n}","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/Footer/index.tsx",["325"],[],"import React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\nimport { FooterRoot, FooterContent, FooterLinks } from './styles';\nimport type { FooterProps } from './types';\n\nexport const Footer: React.FC<FooterProps> = ({ showLinks = true }) => {\n  const currentYear = new Date().getFullYear();\n\n  return (\n    <FooterRoot>\n      <FooterContent>\n        <Typography variant=\"body2\" color=\"text.secondary\">\n          © {currentYear} Public Records Request Portal. All rights reserved.\n        </Typography>\n        {showLinks && (\n          <FooterLinks>\n            <Link href=\"/privacy\" color=\"inherit\" variant=\"body2\">\n              Privacy Policy\n            </Link>\n            <Link href=\"/terms\" color=\"inherit\" variant=\"body2\">\n              Terms of Service\n            </Link>\n            <Link href=\"/contact\" color=\"inherit\" variant=\"body2\">\n              Contact Us\n            </Link>\n          </FooterLinks>\n        )}\n      </FooterContent>\n    </FooterRoot>\n  );\n};\n","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/Footer/styles.ts",[],[],"/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/Footer/types.ts",[],[],"/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/Header/index.tsx",["326"],[],"import React from 'react';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport SearchIcon from '@mui/icons-material/Search';\nimport { HeaderRoot, HeaderToolbar, HeaderActions } from './styles';\nimport type { HeaderProps } from './types';\n\nexport const Header: React.FC<HeaderProps> = ({\n  title = 'Public Records Request Portal',\n  showSearch = true,\n}) => {\n  return (\n    <HeaderRoot position=\"sticky\">\n      <HeaderToolbar>\n        <Typography variant=\"h6\" component=\"h1\">\n          {title}\n        </Typography>\n        <HeaderActions>\n          {showSearch && (\n            <IconButton color=\"inherit\" aria-label=\"search\">\n              <SearchIcon />\n            </IconButton>\n          )}\n        </HeaderActions>\n      </HeaderToolbar>\n    </HeaderRoot>\n  );\n};\n","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/Header/styles.ts",["327"],[],"import { styled } from '@mui/material/styles';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\n\nexport const HeaderRoot = styled(AppBar)(({ theme }) => ({\n  backgroundColor: theme.palette.background.paper,\n  color: theme.palette.text.primary,\n  boxShadow: theme.shadows[2],\n}));\n\nexport const HeaderToolbar = styled(Toolbar)(({ theme }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  padding: theme.spacing(1, 3),\n  [theme.breakpoints.up('sm')]: {\n    padding: theme.spacing(1, 4),\n  },\n}));\n\nexport const HeaderActions = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  gap: theme.spacing(2),\n}));\n","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/Header/types.ts",[],[],"/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/PublicLayout.tsx",["328"],[],"'use client';\n\nimport React from 'react';\nimport { Box, AppBar, Toolbar, Typography, Container, Button } from '@mui/material';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\n\ninterface PublicLayoutProps {\n  children: React.ReactNode;\n}\n\nexport function PublicLayout({ children }: PublicLayoutProps) {\n  const pathname = usePathname();\n\n  return (\n    <Box sx={{ display: 'flex', flexDirection: 'column', minHeight: '100vh' }}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            <Link href=\"/\" style={{ color: 'inherit', textDecoration: 'none' }}>\n              Public Records Portal\n            </Link>\n          </Typography>\n          \n          {/* Public Navigation */}\n          <Box sx={{ display: 'flex', gap: 2 }}>\n            <Button \n              color=\"inherit\" \n              component={Link} \n              href=\"/\"\n              sx={{ fontWeight: pathname === '/' ? 'bold' : 'normal' }}\n            >\n              Submit Request\n            </Button>\n            <Button \n              color=\"inherit\" \n              component={Link} \n              href=\"/track\"\n              sx={{ fontWeight: pathname === '/track' ? 'bold' : 'normal' }}\n            >\n              Track Request\n            </Button>\n            <Button \n              color=\"inherit\" \n              component={Link} \n              href=\"/admin/login\"\n              variant=\"outlined\"\n              sx={{ ml: 2 }}\n            >\n              Staff Login\n            </Button>\n          </Box>\n        </Toolbar>\n      </AppBar>\n      \n      <Box component=\"main\" sx={{ flexGrow: 1, py: 3 }}>\n        <Container maxWidth=\"lg\">\n          {children}\n        </Container>\n      </Box>\n      \n      <Box component=\"footer\" sx={{ py: 2, bgcolor: 'grey.100' }}>\n        <Container maxWidth=\"lg\">\n          <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n            © 2024 Public Records Portal. All rights reserved.\n          </Typography>\n        </Container>\n      </Box>\n    </Box>\n  );\n}","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/layouts/types.ts",[],[],"/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/providers/ThemeProvider/index.tsx",["329"],[],"import { ThemeProvider as MuiThemeProvider } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { theme } from '@/theme/theme';\n\ninterface ThemeProviderProps {\n  children: React.ReactNode;\n}\n\nexport const ThemeProvider = ({ children }: ThemeProviderProps) => {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      {children}\n    </MuiThemeProvider>\n  );\n};\n","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/providers/ThemeProvider.tsx",["330","331","332","333","334","335","336","337","338","339","340","341","342","343","344"],[],"'use client';\n\nimport React from 'react';\nimport { ThemeProvider as MuiThemeProvider, createTheme } from '@mui/material/styles';\nimport { CssBaseline } from '@mui/material';\n\n// Create a theme instance\nconst theme = createTheme({\n  palette: {\n    primary: {\n      main: '#1976d2',\n    },\n    secondary: {\n      main: '#dc004e',\n    },\n  },\n  components: {\n    MuiCssBaseline: {\n      styleOverrides: {\n        body: {\n          scrollbarColor: \"#6b6b6b #2b2b2b\",\n          \"&::-webkit-scrollbar, & *::-webkit-scrollbar\": {\n            backgroundColor: \"#2b2b2b\",\n          },\n          \"&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb\": {\n            borderRadius: 8,\n            backgroundColor: \"#6b6b6b\",\n            minHeight: 24,\n            border: \"3px solid #2b2b2b\",\n          },\n          \"&::-webkit-scrollbar-thumb:focus, & *::-webkit-scrollbar-thumb:focus\": {\n            backgroundColor: \"#959595\",\n          },\n          \"&::-webkit-scrollbar-thumb:active, & *::-webkit-scrollbar-thumb:active\": {\n            backgroundColor: \"#959595\",\n          },\n          \"&::-webkit-scrollbar-thumb:hover, & *::-webkit-scrollbar-thumb:hover\": {\n            backgroundColor: \"#959595\",\n          },\n          \"&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner\": {\n            backgroundColor: \"#2b2b2b\",\n          },\n        },\n      },\n    },\n  },\n});\n\ninterface ThemeProviderProps {\n  children: React.ReactNode;\n}\n\nexport function ThemeProvider({ children }: ThemeProviderProps) {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      {children}\n    </MuiThemeProvider>\n  );\n}","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/providers/types.ts",[],[],"/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/request/RecentRequestsList/index.tsx",["345","346","347","348","349"],[],"import {\n  List,\n  ListItem,\n  ListItemText,\n  ListItemSecondaryAction,\n  IconButton,\n  Typography,\n  Chip,\n} from '@mui/material';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\n\ninterface Request {\n  id: string;\n  title: string;\n  status: 'pending' | 'in-progress' | 'completed' | 'rejected';\n  submittedDate: string;\n  department: string;\n}\n\nconst mockRequests: Request[] = [\n  {\n    id: 'REQ-2023-001',\n    title: 'Police Department Budget 2023',\n    status: 'in-progress',\n    submittedDate: '2023-09-01',\n    department: 'Police Department',\n  },\n  {\n    id: 'REQ-2023-002',\n    title: 'City Council Meeting Minutes',\n    status: 'completed',\n    submittedDate: '2023-08-15',\n    department: 'City Clerk',\n  },\n];\n\nconst getStatusColor = (status: Request['status']): \"warning\" | \"info\" | \"success\" | \"error\" => {\n  const colors = {\n    'pending': 'warning',\n    'in-progress': 'info',\n    'completed': 'success',\n    'rejected': 'error',\n  } as const;\n  return colors[status];\n};\n\nexport const RecentRequestsList = () => {\n  return (\n    <List>\n      {mockRequests.map((request) => (\n        <ListItem key={request.id} divider>\n          <ListItemText\n            primary={\n              <Typography variant=\"subtitle1\" component=\"div\">\n                {request.title}\n              </Typography>\n            }\n            secondary={\n              <>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  {request.department} - Submitted: {request.submittedDate}\n                </Typography>\n                <Chip\n                  label={request.status}\n                  color={getStatusColor(request.status)}\n                  size=\"small\"\n                  sx={{ mt: 1 }}\n                />\n              </>\n            }\n          />\n          <ListItemSecondaryAction>\n            <IconButton edge=\"end\" aria-label=\"view details\">\n              <VisibilityIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      ))}\n    </List>\n  );\n};\n","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/request/RequestConfirmation/index.tsx",["350","351","352","353","354"],[],"'use client';\n\nimport React from 'react';\nimport { \n  Box, \n  Typography, \n  Paper, \n  Chip, \n  Grid, \n  Button,\n  Divider,\n  Card,\n  CardContent \n} from '@mui/material';\nimport { \n  CheckCircle as CheckCircleIcon,\n  ContentCopy as CopyIcon,\n  Download as DownloadIcon \n} from '@mui/icons-material';\nimport { format } from 'date-fns';\nimport { StoredRequest } from '../../../services/requestService';\n\ninterface RequestConfirmationProps {\n  request: StoredRequest;\n  onCopyTrackingId: () => void;\n  onStartNewRequest: () => void;\n}\n\nexport function RequestConfirmation({ \n  request, \n  onCopyTrackingId, \n  onStartNewRequest \n}: RequestConfirmationProps) {\n  const formatDate = (timestamp: any) => {\n    if (!timestamp) return '';\n    // Handle Firestore Timestamp objects\n    const date = timestamp.toDate ? timestamp.toDate() : new Date(timestamp);\n    return format(date, 'MMMM d, yyyy \\'at\\' h:mm a');\n  };\n\n  const getDepartmentDisplayName = (department: string) => {\n    const departments: Record<string, string> = {\n      'police': 'Police Department',\n      'fire': 'Fire Department',\n      'clerk': 'City Clerk',\n      'finance': 'Finance Department',\n      'other': 'Other'\n    };\n    return departments[department] || department;\n  };\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'submitted': return 'primary';\n      case 'processing': return 'info';\n      case 'under_review': return 'warning';\n      case 'completed': return 'success';\n      case 'rejected': return 'error';\n      default: return 'default';\n    }\n  };\n\n  return (\n    <Box sx={{ maxWidth: 800, mx: 'auto', p: 3 }}>\n      {/* Success Header */}\n      <Paper elevation={3} sx={{ p: 4, mb: 3, textAlign: 'center', bgcolor: 'success.50' }}>\n        <CheckCircleIcon sx={{ fontSize: 64, color: 'success.main', mb: 2 }} />\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom color=\"success.main\">\n          Request Submitted Successfully!\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\">\n          Your public records request has been received and assigned a tracking number.\n        </Typography>\n      </Paper>\n\n      {/* Tracking Information */}\n      <Card elevation={2} sx={{ mb: 3 }}>\n        <CardContent>\n          <Typography variant=\"h6\" gutterBottom>\n            Tracking Information\n          </Typography>\n          <Grid container spacing={2} alignItems=\"center\">\n            <Grid item xs={12} sm={8}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Tracking ID\n              </Typography>\n              <Typography variant=\"h5\" fontWeight=\"bold\" color=\"primary.main\">\n                {request.trackingId}\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <Button\n                variant=\"outlined\"\n                startIcon={<CopyIcon />}\n                onClick={onCopyTrackingId}\n                fullWidth\n                size=\"small\"\n              >\n                Copy ID\n              </Button>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n\n      {/* Request Details */}\n      <Card elevation={2} sx={{ mb: 3 }}>\n        <CardContent>\n          <Typography variant=\"h6\" gutterBottom>\n            Request Details\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Request Title\n              </Typography>\n              <Typography variant=\"body1\" gutterBottom>\n                {request.title}\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Department\n              </Typography>\n              <Typography variant=\"body1\" gutterBottom>\n                {getDepartmentDisplayName(request.department)}\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Contact Email\n              </Typography>\n              <Typography variant=\"body1\" gutterBottom>\n                {request.contactEmail}\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Status\n              </Typography>\n              <Chip \n                label={request.status.replace('_', ' ').toUpperCase()} \n                color={getStatusColor(request.status)}\n                size=\"small\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Date Range\n              </Typography>\n              <Typography variant=\"body1\" gutterBottom>\n                {request.dateRange.startDate} to {request.dateRange.endDate}\n                {request.dateRange.preset && ` (${request.dateRange.preset})`}\n              </Typography>\n            </Grid>\n            <Grid item xs={12}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Description\n              </Typography>\n              <Typography variant=\"body1\" gutterBottom>\n                {request.description}\n              </Typography>\n            </Grid>\n            {request.attachmentCount > 0 && (\n              <Grid item xs={12}>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Attachments\n                </Typography>\n                <Typography variant=\"body1\" gutterBottom>\n                  {request.attachmentCount} file(s) uploaded\n                </Typography>\n              </Grid>\n            )}\n            <Grid item xs={12}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Submitted\n              </Typography>\n              <Typography variant=\"body1\">\n                {formatDate(request.submittedAt)}\n              </Typography>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n\n      {/* Next Steps */}\n      <Card elevation={2} sx={{ mb: 3 }}>\n        <CardContent>\n          <Typography variant=\"h6\" gutterBottom>\n            What Happens Next?\n          </Typography>\n          <Typography variant=\"body1\" paragraph>\n            1. Your request will be reviewed by the {getDepartmentDisplayName(request.department)}\n          </Typography>\n          <Typography variant=\"body1\" paragraph>\n            2. You will receive an email confirmation shortly\n          </Typography>\n          <Typography variant=\"body1\" paragraph>\n            3. Processing typically takes 5-10 business days\n          </Typography>\n          <Typography variant=\"body1\" paragraph>\n            4. You can track your request status using the tracking ID above\n          </Typography>\n        </CardContent>\n      </Card>\n\n      {/* Action Buttons */}\n      <Box sx={{ display: 'flex', gap: 2, justifyContent: 'center', flexWrap: 'wrap' }}>\n        <Button\n          variant=\"contained\"\n          onClick={onStartNewRequest}\n          size=\"large\"\n        >\n          Submit Another Request\n        </Button>\n        <Button\n          variant=\"outlined\"\n          size=\"large\"\n          onClick={() => window.location.href = '/status'}\n        >\n          Track This Request\n        </Button>\n        <Button\n          variant=\"outlined\"\n          startIcon={<DownloadIcon />}\n          size=\"large\"\n          onClick={() => window.print()}\n        >\n          Print Confirmation\n        </Button>\n      </Box>\n\n      {/* Important Notice */}\n      <Box sx={{ mt: 4, p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>\n        <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\">\n          <strong>Important:</strong> Please save your tracking ID ({request.trackingId}) \n          to check the status of your request. You will need this ID for any inquiries.\n        </Typography>\n      </Box>\n    </Box>\n  );\n}","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/request/RequestForm/__tests__/RequestForm.test.tsx",["355"],[],"import { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport { RequestForm } from '../index';\n\n// NOTE: Material-UI Select dropdowns render their options in a portal (outside the main DOM tree).\n// For now, we're testing the basic form functionality. The form uses react-hook-form with Zod validation\n// which only triggers validation on form submission, not on field blur.\n\ndescribe('RequestForm', () => {\n  it('renders all form fields', () => {\n    render(<RequestForm />);\n    \n    // Check for all input fields\n    expect(screen.getByRole('textbox', { name: /request title/i })).toBeInTheDocument();\n    const comboboxes = screen.getAllByRole('combobox');\n    expect(comboboxes).toHaveLength(2); // Department select and DateRangePicker preset select\n    expect(screen.getByRole('textbox', { name: /request description/i })).toBeInTheDocument();\n    expect(screen.getByRole('textbox', { name: /contact email/i })).toBeInTheDocument();\n    \n    // Check for DateRangePicker\n    expect(screen.getByText(/date range/i)).toBeInTheDocument();\n    \n    // Check for submit button\n    expect(screen.getByRole('button', { name: /submit request/i })).toBeInTheDocument();\n  });\n\n  it('displays validation errors for empty required fields on form submission', async () => {\n    render(<RequestForm />);\n    \n    // Click submit without filling out the form\n    fireEvent.click(screen.getByRole('button', { name: /submit request/i }));\n    \n    // Check for validation error messages (these appear after form submission)\n    await waitFor(() => {\n      expect(screen.getByText(/title must be at least 5 characters/i)).toBeInTheDocument();\n      expect(screen.getByText(/please select a department/i)).toBeInTheDocument();\n      expect(screen.getByText(/start date is required/i)).toBeInTheDocument();\n      expect(screen.getByText(/description must be at least 20 characters/i)).toBeInTheDocument();\n      expect(screen.getByText(/please provide a valid email/i)).toBeInTheDocument();\n    });\n  });\n\n  it('allows typing in text fields', async () => {\n    const user = userEvent.setup();\n    render(<RequestForm />);\n    \n    // Test typing in title field\n    const titleInput = screen.getByLabelText(/request title/i);\n    await user.type(titleInput, 'Test Request Title');\n    expect(titleInput).toHaveValue('Test Request Title');\n    \n    // Test typing in description field\n    const descriptionInput = screen.getByLabelText(/request description/i);\n    await user.type(descriptionInput, 'This is a test description for the public records request.');\n    expect(descriptionInput).toHaveValue('This is a test description for the public records request.');\n    \n    // Test typing in email field\n    const emailInput = screen.getByLabelText(/contact email/i);\n    await user.type(emailInput, 'test@example.com');\n    expect(emailInput).toHaveValue('test@example.com');\n  });\n\n  it('submit button is enabled by default', () => {\n    render(<RequestForm />);\n    \n    const submitButton = screen.getByRole('button', { name: /submit request/i });\n    expect(submitButton).toBeEnabled();\n  });\n\n  it('shows submit button text changes during submission state', async () => {\n    render(<RequestForm />);\n    \n    // Initial state\n    expect(screen.getByRole('button', { name: /submit request/i })).toBeInTheDocument();\n    \n    // The form will show validation errors when submitted with empty fields\n    fireEvent.click(screen.getByRole('button', { name: /submit request/i }));\n    \n    // Validation errors should appear instead of submission\n    await waitFor(() => {\n      expect(screen.getByText(/title must be at least 5 characters/i)).toBeInTheDocument();\n    });\n  });\n});\n","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/request/RequestForm/index.tsx",["356","357"],[],"'use client';\n\nimport React, { useState } from 'react';\nimport { useForm, Controller } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport {\n  Box,\n  TextField,\n  MenuItem,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  FormHelperText,\n  CircularProgress,\n  Alert,\n  Snackbar,\n  Grid,\n  Typography,\n  Divider,\n} from '@mui/material';\n\nimport { RequestFormData, RequestFormDataWithFiles, requestSchema } from './types';\nimport FileUpload from '../../shared/FileUpload';\nimport DateRangePicker, { DateRange } from '../../shared/DateRangePicker';\nimport { saveRequest } from '../../../services/requestService';\n\nconst departments = [\n  { id: 'police', name: 'Police Department' },\n  { id: 'fire', name: 'Fire Department' },\n  { id: 'clerk', name: 'City Clerk' },\n  { id: 'finance', name: 'Finance Department' },\n  { id: 'other', name: 'Other' },\n];\n\nexport const RequestForm = () => {\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const [submitError, setSubmitError] = useState<string | null>(null);\n  const [submitSuccess, setSubmitSuccess] = useState(false);\n  const [trackingId, setTrackingId] = useState<string | null>(null);\n  const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\n  const [fileUploadError, setFileUploadError] = useState<string>('');\n\n  const {\n    control,\n    handleSubmit,\n    formState: { errors },\n    setValue,\n    watch,\n  } = useForm<RequestFormData>({\n    resolver: zodResolver(requestSchema),\n    defaultValues: {\n      title: '',\n      department: '',\n      description: '',\n      dateRange: {\n        startDate: '',\n        endDate: '',\n        preset: '',\n      },\n      contactEmail: '',\n    },\n  });\n\n  const handleDateRangeChange = (dateRange: DateRange) => {\n    setValue('dateRange', dateRange, { shouldValidate: true });\n  };\n\n  const currentDateRange = watch('dateRange');\n\n  const handleFilesSelected = (files: File[]) => {\n    setSelectedFiles(files);\n    setFileUploadError('');\n  };\n\n  const onSubmit = async (data: RequestFormData) => {\n    setIsSubmitting(true);\n    setSubmitError(null);\n    try {\n      const formDataWithFiles: RequestFormDataWithFiles = {\n        ...data,\n        files: selectedFiles,\n      };\n      \n      // Save to Firebase\n      const result = await saveRequest(formDataWithFiles);\n      \n      console.log('Request saved:', result);\n      \n      // Navigate to confirmation page\n      const confirmationUrl = `/confirmation?trackingId=${encodeURIComponent(result.trackingId)}`;\n      window.location.href = confirmationUrl;\n    } catch (error) {\n      setSubmitError(error instanceof Error ? error.message : 'An error occurred while submitting your request');\n      setIsSubmitting(false);\n    }\n  };\n\n  return (\n    <Box component=\"form\" onSubmit={handleSubmit(onSubmit)} noValidate>\n      <Box sx={{ display: 'flex', flexDirection: 'column', gap: 3 }}>\n        <Box>\n          <Controller\n            name=\"title\"\n            control={control}\n            render={({ field }) => (\n              <TextField\n                {...field}\n                label=\"Request Title\"\n                fullWidth\n                error={!!errors.title}\n                helperText={errors.title?.message}\n                disabled={isSubmitting}\n              />\n            )}\n          />\n        </Box>\n\n        <Box sx={{ display: 'flex', gap: 3, flexDirection: { xs: 'column', md: 'row' } }}>\n          <Box sx={{ flex: 1 }}>\n            <Controller\n              name=\"department\"\n              control={control}\n              render={({ field }) => (\n                <FormControl fullWidth error={!!errors.department}>\n                  <InputLabel>Department</InputLabel>\n                  <Select {...field} label=\"Department\" disabled={isSubmitting} data-testid=\"department-select\">\n                    {departments.map((dept) => (\n                      <MenuItem key={dept.id} value={dept.id}>\n                        {dept.name}\n                      </MenuItem>\n                    ))}\n                  </Select>\n                  <FormHelperText>{errors.department?.message}</FormHelperText>\n                </FormControl>\n              )}\n            />\n          </Box>\n        </Box>\n\n        <Box>\n          <DateRangePicker\n            value={currentDateRange}\n            onChange={handleDateRangeChange}\n            error={errors.dateRange?.message || errors.dateRange?.startDate?.message}\n            disabled={isSubmitting}\n            label=\"Records Date Range\"\n          />\n        </Box>\n\n        <Box>\n          <Controller\n            name=\"description\"\n            control={control}\n            render={({ field }) => (\n              <TextField\n                {...field}\n                label=\"Request Description\"\n                multiline\n                rows={4}\n                fullWidth\n                error={!!errors.description}\n                helperText={errors.description?.message}\n                disabled={isSubmitting}\n              />\n            )}\n          />\n        </Box>\n\n        <Box>\n          <Controller\n            name=\"contactEmail\"\n            control={control}\n            render={({ field }) => (\n              <TextField\n                {...field}\n                label=\"Contact Email\"\n                type=\"email\"\n                fullWidth\n                error={!!errors.contactEmail}\n                helperText={errors.contactEmail?.message}\n                disabled={isSubmitting}\n              />\n            )}\n          />\n        </Box>\n\n        <Box>\n          <Divider sx={{ my: 2 }} />\n          <Typography variant=\"h6\" gutterBottom>\n            Supporting Documents (Optional)\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mb: 2 }}>\n            Upload any documents that help clarify or support your records request.\n          </Typography>\n          <FileUpload\n            onFilesSelected={handleFilesSelected}\n            maxFiles={5}\n            maxSize={10 * 1024 * 1024} // 10MB\n            acceptedFileTypes={[\n              'application/pdf', \n              'application/msword', \n              'application/vnd.openxmlformats-officedocument.wordprocessingml.document', \n              'text/plain', \n              'image/jpeg', \n              'image/png'\n            ]}\n            isLoading={isSubmitting}\n            error={fileUploadError}\n          />\n        </Box>\n\n        <Box>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            size=\"large\"\n            fullWidth\n            disabled={isSubmitting}\n            startIcon={isSubmitting ? <CircularProgress size={20} /> : null}\n          >\n            {isSubmitting ? 'Submitting...' : 'Submit Request'}\n          </Button>\n        </Box>\n      </Box>\n\n      <Snackbar\n        open={!!submitError || submitSuccess}\n        autoHideDuration={submitSuccess ? null : 6000} // Keep success message open until manually closed\n        onClose={() => {\n          setSubmitError(null);\n          setSubmitSuccess(false);\n          setTrackingId(null);\n        }}\n      >\n        <Alert\n          severity={submitError ? 'error' : 'success'}\n          variant=\"filled\"\n          onClose={() => {\n            setSubmitError(null);\n            setSubmitSuccess(false);\n            setTrackingId(null);\n          }}\n        >\n          {submitError || \n           (trackingId \n             ? `Request submitted successfully! Your tracking ID is: ${trackingId}. Please save this ID to track your request status.` \n             : 'Request submitted successfully!'\n           )\n          }\n        </Alert>\n      </Snackbar>\n    </Box>\n  );\n};","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/request/RequestForm/types.ts",[],[],"/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/request/RequestStatusCard/index.tsx",["358","359","360","361","362","363"],[],"import { Paper, Typography, List, ListItem, ListItemText, Box, Chip } from '@mui/material';\nimport { type Theme } from '@mui/material/styles';\n\ninterface RequestStatus {\n  id: string;\n  status: 'pending' | 'in-progress' | 'completed' | 'rejected';\n  requestDate: string;\n  lastUpdated: string;\n}\n\nconst mockStatus: RequestStatus[] = [\n  {\n    id: 'REQ-2023-001',\n    status: 'in-progress',\n    requestDate: '2023-09-01',\n    lastUpdated: '2023-09-07',\n  }\n];\n\nconst getStatusColor = (status: RequestStatus['status']): \"warning\" | \"info\" | \"success\" | \"error\" => {\n  const colors = {\n    'pending': 'warning',\n    'in-progress': 'info',\n    'completed': 'success',\n    'rejected': 'error',\n  } as const;\n  return colors[status];\n};\n\nexport const RequestStatusCard = () => {\n  return (\n    <Paper sx={{ p: 3 }}>\n      <Typography variant=\"h6\" gutterBottom>\n        Current Request Status\n      </Typography>\n      <List>\n        {mockStatus.map((request) => (\n          <ListItem key={request.id} divider>\n            <ListItemText\n              primary={request.id}\n              secondary={\n                <Box sx={{ mt: 1 }}>\n                  <Chip\n                    label={request.status}\n                    color={getStatusColor(request.status)}\n                    size=\"small\"\n                    sx={{ mb: 1 }}\n                  />\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Requested: {request.requestDate}\n                    <br />\n                    Last Updated: {request.lastUpdated}\n                  </Typography>\n                </Box>\n              }\n            />\n          </ListItem>\n        ))}\n      </List>\n    </Paper>\n  );\n};\n","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/shared/DateRangePicker/__tests__/DateRangePicker.test.tsx",["364"],[],"import { render, screen, fireEvent } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\nimport DateRangePicker from '../index';\nimport type { DateRange } from '../index';\n\ndescribe('DateRangePicker', () => {\n  const mockOnChange = jest.fn();\n  const defaultProps = {\n    onChange: mockOnChange,\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('Rendering', () => {\n    it('renders with default label and preset selector', () => {\n      render(<DateRangePicker {...defaultProps} />);\n      \n      expect(screen.getByText('Date Range')).toBeInTheDocument();\n      expect(screen.getByTestId('date-range-preset')).toBeInTheDocument();\n    });\n\n    it('renders with custom label', () => {\n      render(<DateRangePicker {...defaultProps} label=\"Request Timeframe\" />);\n      \n      expect(screen.getByText('Request Timeframe')).toBeInTheDocument();\n    });\n\n    it('shows error message when error prop is provided', () => {\n      const errorMessage = 'Please select a valid date range';\n      render(<DateRangePicker {...defaultProps} error={errorMessage} />);\n      \n      expect(screen.getByText(errorMessage)).toBeInTheDocument();\n    });\n\n    it('disables inputs when disabled prop is true', () => {\n      render(<DateRangePicker {...defaultProps} disabled />);\n      \n      const select = screen.getByTestId('date-range-preset').querySelector('[role=\"combobox\"]');\n      expect(select).toHaveAttribute('aria-disabled', 'true');\n    });\n  });\n\n  describe('Preset Selection', () => {\n    it('shows all preset options', async () => {\n      const user = userEvent.setup();\n      render(<DateRangePicker {...defaultProps} />);\n      \n      const select = screen.getByTestId('date-range-preset').querySelector('[role=\"combobox\"]')!;\n      await user.click(select);\n      \n      expect(screen.getByText('Last 7 days')).toBeInTheDocument();\n      expect(screen.getByText('Last 30 days')).toBeInTheDocument();\n      expect(screen.getByText('Last 90 days')).toBeInTheDocument();\n      expect(screen.getByText('Last year')).toBeInTheDocument();\n      expect(screen.getByText('Custom range')).toBeInTheDocument();\n    });\n\n    it('calls onChange when preset is selected', async () => {\n      const user = userEvent.setup();\n      render(<DateRangePicker {...defaultProps} />);\n      \n      const select = screen.getByTestId('date-range-preset').querySelector('[role=\"combobox\"]')!;\n      await user.click(select);\n      await user.click(screen.getByText('Last 30 days'));\n      \n      expect(mockOnChange).toHaveBeenCalledWith(expect.objectContaining({\n        preset: 'last-30-days',\n        startDate: expect.any(String),\n        endDate: expect.any(String),\n      }));\n    });\n  });\n\n  describe('Custom Date Range', () => {\n    it('shows custom date inputs when \"Custom range\" is selected', async () => {\n      const user = userEvent.setup();\n      render(<DateRangePicker {...defaultProps} />);\n      \n      const select = screen.getByTestId('date-range-preset').querySelector('[role=\"combobox\"]')!;\n      await user.click(select);\n      await user.click(screen.getByText('Custom range'));\n      \n      expect(screen.getByTestId('start-date-input')).toBeInTheDocument();\n      expect(screen.getByTestId('end-date-input')).toBeInTheDocument();\n    });\n\n    it('calls onChange when custom dates are entered', async () => {\n      const user = userEvent.setup();\n      render(<DateRangePicker {...defaultProps} />);\n      \n      // Select custom range\n      const select = screen.getByTestId('date-range-preset').querySelector('[role=\"combobox\"]')!;\n      await user.click(select);\n      await user.click(screen.getByText('Custom range'));\n      \n      // Enter start date\n      const startDateInput = screen.getByTestId('start-date-input').querySelector('input')!;\n      await user.clear(startDateInput);\n      await user.type(startDateInput, '2023-01-01');\n      \n      expect(mockOnChange).toHaveBeenCalledWith(expect.objectContaining({\n        startDate: '2023-01-01',\n        preset: 'custom',\n      }));\n    });\n\n    it('sets max date constraint on start date based on end date', async () => {\n      const user = userEvent.setup();\n      render(<DateRangePicker {...defaultProps} />);\n      \n      const select = screen.getByTestId('date-range-preset').querySelector('[role=\"combobox\"]')!;\n      await user.click(select);\n      await user.click(screen.getByText('Custom range'));\n      \n      // Set end date first\n      const endDateInput = screen.getByTestId('end-date-input').querySelector('input')!;\n      await user.clear(endDateInput);\n      await user.type(endDateInput, '2023-12-31');\n      \n      // Check start date has max constraint\n      const startDateInput = screen.getByTestId('start-date-input').querySelector('input')!;\n      expect(startDateInput).toHaveAttribute('max', '2023-12-31');\n    });\n\n    it('sets min date constraint on end date based on start date', async () => {\n      const user = userEvent.setup();\n      render(<DateRangePicker {...defaultProps} />);\n      \n      const select = screen.getByTestId('date-range-preset').querySelector('[role=\"combobox\"]')!;\n      await user.click(select);\n      await user.click(screen.getByText('Custom range'));\n      \n      // Set start date first\n      const startDateInput = screen.getByTestId('start-date-input').querySelector('input')!;\n      await user.clear(startDateInput);\n      await user.type(startDateInput, '2023-01-01');\n      \n      // Check end date has min constraint\n      const endDateInput = screen.getByTestId('end-date-input').querySelector('input')!;\n      expect(endDateInput).toHaveAttribute('min', '2023-01-01');\n    });\n  });\n\n  describe('Controlled Component', () => {\n    it('displays initial value correctly', () => {\n      const initialValue: DateRange = {\n        startDate: '2023-01-01',\n        endDate: '2023-01-31',\n        preset: 'custom',\n      };\n      \n      render(<DateRangePicker {...defaultProps} value={initialValue} />);\n      \n      expect(screen.getByText('Custom range')).toBeInTheDocument();\n    });\n\n    it('shows date range summary for preset selections', async () => {\n      const user = userEvent.setup();\n      render(<DateRangePicker {...defaultProps} />);\n      \n      const select = screen.getByTestId('date-range-preset').querySelector('[role=\"combobox\"]')!;\n      await user.click(select);\n      await user.click(screen.getByText('Last 7 days'));\n      \n      // Should show the calculated date range\n      expect(screen.getByText(/Selected range:/)).toBeInTheDocument();\n    });\n  });\n});","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/shared/DateRangePicker/index.tsx",["365"],[],"'use client';\n\nimport React, { useState } from 'react';\nimport {\n  Box,\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Grid,\n  Typography,\n  FormHelperText,\n} from '@mui/material';\nimport { SelectChangeEvent } from '@mui/material/Select';\n\nexport interface DateRange {\n  startDate: string;\n  endDate: string;\n  preset?: string;\n}\n\nexport interface DateRangePickerProps {\n  value?: DateRange;\n  onChange: (dateRange: DateRange) => void;\n  error?: string;\n  disabled?: boolean;\n  label?: string;\n}\n\nconst DATE_PRESETS = [\n  { value: 'last-7-days', label: 'Last 7 days' },\n  { value: 'last-30-days', label: 'Last 30 days' },\n  { value: 'last-90-days', label: 'Last 90 days' },\n  { value: 'last-year', label: 'Last year' },\n  { value: 'custom', label: 'Custom range' },\n];\n\nconst calculateDateRange = (preset: string): Partial<DateRange> => {\n  const today = new Date();\n  const formatDate = (date: Date) => date.toISOString().split('T')[0];\n\n  switch (preset) {\n    case 'last-7-days':\n      return {\n        startDate: formatDate(new Date(today.getTime() - 7 * 24 * 60 * 60 * 1000)),\n        endDate: formatDate(today),\n      };\n    case 'last-30-days':\n      return {\n        startDate: formatDate(new Date(today.getTime() - 30 * 24 * 60 * 60 * 1000)),\n        endDate: formatDate(today),\n      };\n    case 'last-90-days':\n      return {\n        startDate: formatDate(new Date(today.getTime() - 90 * 24 * 60 * 60 * 1000)),\n        endDate: formatDate(today),\n      };\n    case 'last-year':\n      return {\n        startDate: formatDate(new Date(today.getTime() - 365 * 24 * 60 * 60 * 1000)),\n        endDate: formatDate(today),\n      };\n    default:\n      return {};\n  }\n};\n\nconst DateRangePicker: React.FC<DateRangePickerProps> = ({\n  value = { startDate: '', endDate: '', preset: '' },\n  onChange,\n  error = '',\n  disabled = false,\n  label = 'Date Range',\n}) => {\n  const [preset, setPreset] = useState(value.preset || '');\n  const [customStartDate, setCustomStartDate] = useState(value.startDate || '');\n  const [customEndDate, setCustomEndDate] = useState(value.endDate || '');\n\n  const handlePresetChange = (event: SelectChangeEvent) => {\n    const newPreset = event.target.value;\n    setPreset(newPreset);\n\n    if (newPreset === 'custom') {\n      // Keep current custom dates or clear them\n      onChange({\n        startDate: customStartDate,\n        endDate: customEndDate,\n        preset: newPreset,\n      });\n    } else {\n      // Calculate preset dates\n      const calculatedRange = calculateDateRange(newPreset);\n      const newDateRange = {\n        startDate: calculatedRange.startDate || '',\n        endDate: calculatedRange.endDate || '',\n        preset: newPreset,\n      };\n      \n      setCustomStartDate(newDateRange.startDate);\n      setCustomEndDate(newDateRange.endDate);\n      onChange(newDateRange);\n    }\n  };\n\n  const handleStartDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newStartDate = event.target.value;\n    setCustomStartDate(newStartDate);\n    onChange({\n      startDate: newStartDate,\n      endDate: customEndDate,\n      preset: preset,\n    });\n  };\n\n  const handleEndDateChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newEndDate = event.target.value;\n    setCustomEndDate(newEndDate);\n    onChange({\n      startDate: customStartDate,\n      endDate: newEndDate,\n      preset: preset,\n    });\n  };\n\n  const showCustomFields = preset === 'custom';\n\n  return (\n    <Box>\n      <Typography variant=\"subtitle2\" gutterBottom>\n        {label}\n      </Typography>\n      \n      <FormControl fullWidth error={!!error} sx={{ mb: 2 }}>\n        <InputLabel>Time Period</InputLabel>\n        <Select\n          value={preset}\n          label=\"Time Period\"\n          onChange={handlePresetChange}\n          disabled={disabled}\n          data-testid=\"date-range-preset\"\n        >\n          {DATE_PRESETS.map((presetOption) => (\n            <MenuItem key={presetOption.value} value={presetOption.value}>\n              {presetOption.label}\n            </MenuItem>\n          ))}\n        </Select>\n        {error && <FormHelperText>{error}</FormHelperText>}\n      </FormControl>\n\n      {showCustomFields && (\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              label=\"Start Date\"\n              type=\"date\"\n              value={customStartDate}\n              onChange={handleStartDateChange}\n              fullWidth\n              disabled={disabled}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              inputProps={{\n                max: customEndDate || undefined,\n              }}\n              data-testid=\"start-date-input\"\n            />\n          </Grid>\n          <Grid item xs={12} sm={6}>\n            <TextField\n              label=\"End Date\"\n              type=\"date\"\n              value={customEndDate}\n              onChange={handleEndDateChange}\n              fullWidth\n              disabled={disabled}\n              InputLabelProps={{\n                shrink: true,\n              }}\n              inputProps={{\n                min: customStartDate || undefined,\n                max: new Date().toISOString().split('T')[0], // Can't select future dates\n              }}\n              data-testid=\"end-date-input\"\n            />\n          </Grid>\n        </Grid>\n      )}\n\n      {!showCustomFields && (customStartDate || customEndDate) && (\n        <Box sx={{ mt: 1, p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>\n          <Typography variant=\"body2\" color=\"textSecondary\">\n            Selected range: {customStartDate} to {customEndDate}\n          </Typography>\n        </Box>\n      )}\n    </Box>\n  );\n};\n\nexport default DateRangePicker;","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/shared/FileUpload/__tests__/FileUpload.test.tsx",["366"],[],"import { render, screen, fireEvent } from '@testing-library/react';\nimport FileUpload from '../index';\n\n// A reusable mock for useDropzone\ninterface FileRejection {\n  file: File;\n  errors: Array<{ message: string }>;\n}\n\nlet mockDropzoneHook: {\n  getRootProps: () => Record<string, unknown>;\n  getInputProps: () => Record<string, unknown>;\n  isDragActive: boolean;\n  acceptedFiles: File[];\n  fileRejections: FileRejection[];\n} = {\n  getRootProps: () => ({}),\n  getInputProps: () => ({}),\n  isDragActive: false,\n  acceptedFiles: [],\n  fileRejections: [],\n};\n\n// Mock react-dropzone\njest.mock('react-dropzone', () => ({\n  useDropzone: () => mockDropzoneHook,\n}));\n\ndescribe('FileUpload', () => {\n  const mockOnFilesSelected = jest.fn();\n  const defaultProps = {\n    onFilesSelected: mockOnFilesSelected,\n  };\n\n  beforeEach(() => {\n    jest.clearAllMocks();\n    // Reset mockDropzoneHook to default values\n    mockDropzoneHook = {\n      getRootProps: () => ({}),\n      getInputProps: () => ({}),\n      isDragActive: false,\n      acceptedFiles: [] as File[],\n      fileRejections: [] as FileRejection[],\n    };\n  });\n\n  describe('Rendering', () => {\n    it('renders upload area with instructions', () => {\n      render(<FileUpload {...defaultProps} />);\n      \n      expect(screen.getByText(/drag and drop files here/i)).toBeInTheDocument();\n      expect(screen.getByRole('button', { name: /select files/i })).toBeInTheDocument();\n    });\n\n    it('shows loading state when isLoading is true', () => {\n      render(<FileUpload {...defaultProps} isLoading={true} />);\n      \n      expect(screen.getByRole('progressbar')).toBeInTheDocument();\n      expect(screen.getByRole('button', { name: /select files/i })).toBeDisabled();\n    });\n\n    it('displays error message when error prop is provided', () => {\n      const errorMessage = 'Failed to upload files';\n      render(<FileUpload {...defaultProps} error={errorMessage} />);\n      \n      expect(screen.getByText(errorMessage)).toBeInTheDocument();\n    });\n\n    it('displays accepted file types and size limit', () => {\n      const maxSize = 5 * 1024 * 1024; // 5MB\n      const acceptedTypes = ['.pdf', '.doc'];\n      \n      render(\n        <FileUpload\n          {...defaultProps}\n          maxSize={maxSize}\n          acceptedFileTypes={acceptedTypes}\n        />\n      );\n      \n      expect(screen.getByText((text) => text.includes('.pdf, .doc'))).toBeInTheDocument();\n      expect(screen.getByText((text) => text.includes('5 MB'))).toBeInTheDocument();\n    });\n  });\n\n  describe('File Handling', () => {\n    const mockFile = new File(['test content'], 'test.pdf', { type: 'application/pdf' });\n    const mockRejectedFile = new File(['test content'], 'test.exe', { type: 'application/x-msdownload' });\n\n    it('displays accepted files with proper formatting', () => {\n      mockDropzoneHook = {\n        ...mockDropzoneHook,\n        acceptedFiles: [mockFile],\n      };\n\n      render(<FileUpload {...defaultProps} />);\n      expect(screen.getByText(/test\\.pdf/)).toBeInTheDocument();\n      expect(screen.getByText(/bytes/i)).toBeInTheDocument();\n    });\n\n    it('displays file rejection messages', () => {\n      mockDropzoneHook = {\n        ...mockDropzoneHook,\n        fileRejections: [{\n          file: mockRejectedFile,\n          errors: [{ message: 'File type not allowed' }],\n        }],\n      };\n\n      render(<FileUpload {...defaultProps} />);\n      const errorMessage = screen.getByRole('alert');\n      expect(errorMessage.textContent).toContain('test.exe');\n      expect(errorMessage.textContent).toContain('File type not allowed');\n    });\n\n    it('calls onFilesSelected with accepted files', () => {\n      mockDropzoneHook = {\n        ...mockDropzoneHook,\n        acceptedFiles: [mockFile],\n      };\n\n      render(<FileUpload {...defaultProps} />);\n      mockOnFilesSelected([mockFile]);\n      expect(mockOnFilesSelected).toHaveBeenCalledWith([mockFile]);\n    });\n\n    it('shows drag active state', () => {\n      mockDropzoneHook = {\n        ...mockDropzoneHook,\n        isDragActive: true,\n      };\n\n      render(<FileUpload {...defaultProps} />);\n      expect(screen.getByText(/drop the files here/i)).toBeInTheDocument();\n    });\n  });\n\n  describe('File Size Formatting', () => {\n    it('formats different file sizes correctly', () => {\n      const files = [\n        new File(['x'.repeat(500)], 'small.txt', { type: 'text/plain' }),\n        new File(['x'.repeat(1500)], 'medium.txt', { type: 'text/plain' }),\n        new File(['x'.repeat(2 * 1024 * 1024)], 'large.txt', { type: 'text/plain' }),\n      ];\n\n      mockDropzoneHook = {\n        ...mockDropzoneHook,\n        acceptedFiles: files,\n      };\n\n      render(<FileUpload {...defaultProps} />);\n      \n      expect(screen.getByText(/small\\.txt.*\\(500 Bytes\\)/)).toBeInTheDocument();\n      expect(screen.getByText(/medium\\.txt.*\\(1\\.46 KB\\)/)).toBeInTheDocument();\n      expect(screen.getByText(/large\\.txt.*\\(2 MB\\)/)).toBeInTheDocument();\n    });\n  });\n});\n","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/shared/FileUpload/index.tsx",["367"],[],"'use client';\n\nimport React, { useCallback, useState } from 'react';\nimport { useDropzone, FileRejection } from 'react-dropzone';\nimport { Box, Typography, Button, LinearProgress, Alert, IconButton, Card, CardContent } from '@mui/material';\nimport { styled, Theme } from '@mui/material/styles';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport DescriptionIcon from '@mui/icons-material/Description';\nimport ImageIcon from '@mui/icons-material/Image';\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\n\nexport interface FileUploadProps {\n  onFilesSelected: (files: File[]) => void;\n  maxFiles?: number;\n  maxSize?: number; // in bytes\n  acceptedFileTypes?: string[];\n  isLoading?: boolean;\n  error?: string;\n}\n\nconst DropZone = styled(Box)(({ theme }: { theme: Theme }) => ({\n  border: `2px dashed ${theme.palette.divider}`,\n  borderRadius: theme.shape.borderRadius,\n  padding: theme.spacing(4),\n  textAlign: 'center',\n  cursor: 'pointer',\n  '&:hover': {\n    backgroundColor: theme.palette.action.hover,\n  },\n}));\n\nconst FileList = styled(Box)(({ theme }: { theme: Theme }) => ({\n  marginTop: theme.spacing(2),\n}));\n\nconst formatFileSize = (bytes: number): string => {\n  if (bytes === 0) return '0 Bytes';\n  const k = 1024;\n  const sizes = ['Bytes', 'KB', 'MB', 'GB'];\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\n  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))} ${sizes[i]}`;\n};\n\nconst getFileIcon = (file: File) => {\n  if (file.type.startsWith('image/')) {\n    return <ImageIcon color=\"primary\" />;\n  } else if (file.type === 'application/pdf') {\n    return <PictureAsPdfIcon color=\"error\" />;\n  } else {\n    return <DescriptionIcon color=\"action\" />;\n  }\n};\n\nconst getFilePreview = (file: File): string | null => {\n  if (file.type.startsWith('image/')) {\n    return URL.createObjectURL(file);\n  }\n  return null;\n};\n\nconst FileUpload: React.FC<FileUploadProps> = ({\n  onFilesSelected,\n  maxFiles = 5,\n  maxSize = 10 * 1024 * 1024, // 10MB default\n  acceptedFileTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'text/plain', 'image/jpeg', 'image/png'],\n  isLoading = false,\n  error = '',\n}) => {\n  const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\n\n  const onDrop = useCallback((acceptedFiles: File[], rejectedFiles: FileRejection[]) => {\n    const newFiles = [...selectedFiles, ...acceptedFiles];\n    setSelectedFiles(newFiles);\n    onFilesSelected(newFiles);\n  }, [onFilesSelected, selectedFiles]);\n\n  const removeFile = useCallback((indexToRemove: number) => {\n    const newFiles = selectedFiles.filter((_, index) => index !== indexToRemove);\n    setSelectedFiles(newFiles);\n    onFilesSelected(newFiles);\n  }, [selectedFiles, onFilesSelected]);\n\n  const { getRootProps, getInputProps, isDragActive, fileRejections } = useDropzone({\n    onDrop,\n    maxFiles,\n    maxSize,\n    accept: acceptedFileTypes.reduce<Record<string, string[]>>((acc, type) => ({ ...acc, [type]: [] }), {}),\n  });\n\n  return (\n    <Box>\n      <DropZone\n        {...getRootProps()}\n        sx={{\n          bgcolor: isDragActive ? 'action.hover' : 'background.paper',\n        }}\n      >\n        <input {...getInputProps()} />\n        <CloudUploadIcon sx={{ fontSize: 40, color: 'primary.main', mb: 2 }} />\n        <Typography variant=\"body1\" gutterBottom>\n          {isDragActive\n            ? 'Drop the files here'\n            : 'Drag and drop files here, or click to select files'}\n        </Typography>\n        <Typography variant=\"caption\" color=\"textSecondary\">\n          Accepted files: PDF, Word documents, text files, images (JPG, PNG)\n        </Typography>\n        <Typography variant=\"caption\" display=\"block\" color=\"textSecondary\">\n          Maximum size: {formatFileSize(maxSize)}\n        </Typography>\n        <Button\n          variant=\"contained\"\n          sx={{ mt: 2 }}\n          disabled={isLoading}\n        >\n          Select Files\n        </Button>\n      </DropZone>\n\n      {isLoading && (\n        <Box sx={{ mt: 2 }}>\n          <LinearProgress />\n        </Box>\n      )}\n\n      {error && (\n        <Typography color=\"error\" variant=\"body2\" sx={{ mt: 1 }}>\n          {error}\n        </Typography>\n      )}\n\n      {fileRejections.length > 0 && (\n        <Box sx={{ mt: 2 }}>\n          {fileRejections.map(({ file, errors }, index) => (\n            <Alert \n              key={`${file.name}-${index}`}\n              severity=\"error\" \n              sx={{ mb: 1 }}\n            >\n              {file.name}: {errors.map(e => e.message).join(', ')}\n            </Alert>\n          ))}\n        </Box>\n      )}\n\n      {selectedFiles.length > 0 && (\n        <FileList>\n          <Typography variant=\"subtitle2\" gutterBottom>\n            Selected Files ({selectedFiles.length}/{maxFiles}):\n          </Typography>\n          {selectedFiles.map((file: File, index: number) => {\n            const previewUrl = getFilePreview(file);\n            return (\n              <Card key={`${file.name}-${index}`} sx={{ mb: 1 }}>\n                <CardContent sx={{ p: 2, '&:last-child': { pb: 2 } }}>\n                  <Box sx={{ display: 'flex', alignItems: 'center', gap: 2 }}>\n                    {previewUrl ? (\n                      <Box\n                        component=\"img\"\n                        src={previewUrl}\n                        alt={file.name}\n                        sx={{\n                          width: 40,\n                          height: 40,\n                          objectFit: 'cover',\n                          borderRadius: 1,\n                        }}\n                      />\n                    ) : (\n                      <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', width: 40, height: 40 }}>\n                        {getFileIcon(file)}\n                      </Box>\n                    )}\n                    <Box sx={{ flexGrow: 1, minWidth: 0 }}>\n                      <Typography variant=\"body2\" noWrap title={file.name}>\n                        {file.name}\n                      </Typography>\n                      <Typography variant=\"caption\" color=\"textSecondary\">\n                        {formatFileSize(file.size)}\n                      </Typography>\n                    </Box>\n                    <IconButton\n                      size=\"small\"\n                      onClick={() => removeFile(index)}\n                      disabled={isLoading}\n                      aria-label={`Remove ${file.name}`}\n                    >\n                      <DeleteIcon />\n                    </IconButton>\n                  </Box>\n                </CardContent>\n              </Card>\n            );\n          })}\n        </FileList>\n      )}\n    </Box>\n  );\n};\n\nexport default FileUpload;\n","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/components/staff/StaffDashboard/index.tsx",["368","369","370","371","372","373","374","375","376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397","398"],[],"'use client';\n\nimport React, { useState, useEffect } from 'react';\nimport { useRouter, useSearchParams, usePathname } from 'next/navigation';\nimport {\n  Box,\n  Typography,\n  Paper,\n  Chip,\n  IconButton,\n  Tooltip,\n  Alert,\n  CircularProgress,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  OutlinedInput,\n  Stack,\n  TextField\n} from '@mui/material';\nimport { \n  DataGrid, \n  GridColDef, \n  GridRowParams,\n  GridRenderCellParams \n} from '@mui/x-data-grid';\nimport { DatePicker, LocalizationProvider } from '@mui/x-date-pickers';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { \n  Visibility as ViewIcon,\n  Warning as WarningIcon,\n  Error as ErrorIcon,\n  Search as SearchIcon,\n  Clear as ClearIcon\n} from '@mui/icons-material';\nimport { format, differenceInBusinessDays, addBusinessDays, isAfter, isBefore, startOfDay, endOfDay } from 'date-fns';\nimport { StoredRequest, getAllRequests, RequestStatus } from '../../../services/requestService';\n\n// SLA Configuration (in business days)\nconst SLA_DAYS = 10;\nconst DUE_SOON_THRESHOLD = 3;\n\ninterface StaffDashboardProps {\n  onRequestSelect?: (request: StoredRequest) => void;\n}\n\nexport function StaffDashboard({ onRequestSelect }: StaffDashboardProps) {\n  const router = useRouter();\n  const pathname = usePathname();\n  const searchParams = useSearchParams();\n  \n  const [requests, setRequests] = useState<StoredRequest[]>([]);\n  const [filteredRequests, setFilteredRequests] = useState<StoredRequest[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  \n  // Filter states\n  const [selectedDepartments, setSelectedDepartments] = useState<string[]>([]);\n  const [selectedStatuses, setSelectedStatuses] = useState<string[]>([]);\n  const [startDate, setStartDate] = useState<Date | null>(null);\n  const [endDate, setEndDate] = useState<Date | null>(null);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  // Available filter options\n  const departmentOptions = [\n    { value: 'police', label: 'Police Department' },\n    { value: 'fire', label: 'Fire Department' },\n    { value: 'clerk', label: 'City Clerk' },\n    { value: 'finance', label: 'Finance Department' },\n    { value: 'public_works', label: 'Public Works' },\n    { value: 'legal', label: 'Legal Department' },\n    { value: 'other', label: 'Other' }\n  ];\n\n  const statusOptions = [\n    { value: 'submitted', label: 'Submitted' },\n    { value: 'processing', label: 'Processing' },\n    { value: 'under_review', label: 'Under Review' },\n    { value: 'completed', label: 'Completed' },\n    { value: 'rejected', label: 'Rejected' }\n  ];\n\n  useEffect(() => {\n    fetchRequests();\n    loadFiltersFromURL();\n  }, []);\n\n  // Load filter state from URL parameters on initial load\n  const loadFiltersFromURL = () => {\n    const departments = searchParams.get('departments');\n    const statuses = searchParams.get('statuses');\n    const search = searchParams.get('search');\n    const start = searchParams.get('startDate');\n    const end = searchParams.get('endDate');\n\n    if (departments) {\n      setSelectedDepartments(departments.split(',').filter(Boolean));\n    }\n    if (statuses) {\n      setSelectedStatuses(statuses.split(',').filter(Boolean));\n    }\n    if (search) {\n      setSearchQuery(search);\n    }\n    if (start) {\n      try {\n        setStartDate(new Date(start));\n      } catch (e) {\n        console.warn('Invalid start date in URL:', start);\n      }\n    }\n    if (end) {\n      try {\n        setEndDate(new Date(end));\n      } catch (e) {\n        console.warn('Invalid end date in URL:', end);\n      }\n    }\n  };\n\n  // Update URL parameters when filters change\n  const updateURL = () => {\n    const params = new URLSearchParams();\n    \n    if (selectedDepartments.length > 0) {\n      params.set('departments', selectedDepartments.join(','));\n    }\n    if (selectedStatuses.length > 0) {\n      params.set('statuses', selectedStatuses.join(','));\n    }\n    if (searchQuery.trim()) {\n      params.set('search', searchQuery.trim());\n    }\n    if (startDate) {\n      params.set('startDate', startDate.toISOString().split('T')[0]);\n    }\n    if (endDate) {\n      params.set('endDate', endDate.toISOString().split('T')[0]);\n    }\n\n    const paramString = params.toString();\n    const newURL = paramString ? `${pathname}?${paramString}` : pathname;\n    \n    // Use replace to avoid creating history entries for every filter change\n    router.replace(newURL as any);\n  };\n\n  // Apply filters when requests or filter criteria change\n  useEffect(() => {\n    applyFilters();\n  }, [requests, selectedDepartments, selectedStatuses, startDate, endDate, searchQuery]);\n\n  // Update URL when filters change (debounced)\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      updateURL();\n    }, 500); // 500ms debounce\n\n    return () => clearTimeout(timeoutId);\n  }, [selectedDepartments, selectedStatuses, startDate, endDate, searchQuery]);\n\n  const fetchRequests = async () => {\n    try {\n      setLoading(true);\n      const requestData = await getAllRequests();\n      setRequests(requestData);\n      setError(null);\n    } catch (err) {\n      setError(err instanceof Error ? err.message : 'Failed to load requests');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const applyFilters = () => {\n    let filtered = [...requests];\n\n    // Filter by departments\n    if (selectedDepartments.length > 0) {\n      filtered = filtered.filter(request => \n        selectedDepartments.includes(request.department)\n      );\n    }\n\n    // Filter by statuses\n    if (selectedStatuses.length > 0) {\n      filtered = filtered.filter(request => \n        selectedStatuses.includes(request.status)\n      );\n    }\n\n    // Filter by date range (submission date)\n    if (startDate) {\n      filtered = filtered.filter(request => {\n        const requestDate = request.submittedAt.toDate ? request.submittedAt.toDate() : new Date(request.submittedAt as any);\n        return isAfter(requestDate, startOfDay(startDate)) || requestDate.toDateString() === startDate.toDateString();\n      });\n    }\n\n    if (endDate) {\n      filtered = filtered.filter(request => {\n        const requestDate = request.submittedAt.toDate ? request.submittedAt.toDate() : new Date(request.submittedAt as any);\n        return isBefore(requestDate, endOfDay(endDate)) || requestDate.toDateString() === endDate.toDateString();\n      });\n    }\n\n    // Filter by search query (title, description, tracking ID, contact email)\n    if (searchQuery.trim()) {\n      const query = searchQuery.toLowerCase().trim();\n      filtered = filtered.filter(request => \n        request.title.toLowerCase().includes(query) ||\n        request.description.toLowerCase().includes(query) ||\n        request.trackingId.toLowerCase().includes(query) ||\n        request.contactEmail.toLowerCase().includes(query)\n      );\n    }\n\n    setFilteredRequests(filtered);\n  };\n\n  const handleDepartmentChange = (event: any) => {\n    const value = event.target.value;\n    setSelectedDepartments(typeof value === 'string' ? value.split(',') : value);\n  };\n\n  const handleStatusChange = (event: any) => {\n    const value = event.target.value;\n    setSelectedStatuses(typeof value === 'string' ? value.split(',') : value);\n  };\n\n  const clearAllFilters = () => {\n    setSelectedDepartments([]);\n    setSelectedStatuses([]);\n    setStartDate(null);\n    setEndDate(null);\n    setSearchQuery('');\n  };\n\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value);\n  };\n\n  const hasActiveFilters = selectedDepartments.length > 0 || \n                          selectedStatuses.length > 0 || \n                          startDate !== null || \n                          endDate !== null || \n                          searchQuery.trim() !== '';\n\n  const calculateDueDate = (submittedAt: any) => {\n    const submitDate = submittedAt.toDate ? submittedAt.toDate() : new Date(submittedAt);\n    return addBusinessDays(submitDate, SLA_DAYS);\n  };\n\n  const getDueDateStatus = (submittedAt: any) => {\n    const dueDate = calculateDueDate(submittedAt);\n    const today = new Date();\n    const daysUntilDue = differenceInBusinessDays(dueDate, today);\n\n    if (daysUntilDue < 0) {\n      return { status: 'overdue', daysUntilDue: Math.abs(daysUntilDue), color: 'error' as const };\n    } else if (daysUntilDue <= DUE_SOON_THRESHOLD) {\n      return { status: 'due-soon', daysUntilDue, color: 'warning' as const };\n    } else {\n      return { status: 'on-time', daysUntilDue, color: 'success' as const };\n    }\n  };\n\n  const getStatusColor = (status: RequestStatus) => {\n    switch (status) {\n      case 'submitted': return 'info';\n      case 'processing': return 'primary';\n      case 'under_review': return 'warning';\n      case 'completed': return 'success';\n      case 'rejected': return 'error';\n      default: return 'default';\n    }\n  };\n\n  const getDepartmentDisplayName = (department: string) => {\n    const departments: Record<string, string> = {\n      'police': 'Police Department',\n      'fire': 'Fire Department',\n      'clerk': 'City Clerk',\n      'finance': 'Finance Department',\n      'public_works': 'Public Works',\n      'legal': 'Legal Department',\n      'other': 'Other'\n    };\n    return departments[department] || department;\n  };\n\n  const formatDate = (timestamp: any) => {\n    if (!timestamp) return '';\n    const date = timestamp.toDate ? timestamp.toDate() : new Date(timestamp);\n    return format(date, 'MMM d, yyyy h:mm a');\n  };\n\n  const columns: GridColDef[] = [\n    {\n      field: 'trackingId',\n      headerName: 'Tracking ID',\n      width: 150\n    },\n    {\n      field: 'title',\n      headerName: 'Request Title',\n      width: 300,\n      flex: 1\n    },\n    {\n      field: 'department',\n      headerName: 'Department',\n      width: 180,\n      valueGetter: (params: any) => \n        getDepartmentDisplayName(params.value)\n    },\n    {\n      field: 'status',\n      headerName: 'Status',\n      width: 150,\n      renderCell: (params: GridRenderCellParams) => (\n        <Chip\n          label={params.value.replace('_', ' ').toUpperCase()}\n          color={getStatusColor(params.value)}\n          size=\"small\"\n        />\n      )\n    },\n    {\n      field: 'submittedAt',\n      headerName: 'Submitted',\n      width: 180,\n      valueGetter: (params: any) => \n        formatDate(params.value)\n    },\n    {\n      field: 'dueDate',\n      headerName: 'Due Date',\n      width: 180,\n      valueGetter: (params: any) => {\n        const dueDate = calculateDueDate(params.row.submittedAt);\n        return format(dueDate, 'MMM d, yyyy');\n      }\n    },\n    {\n      field: 'dueDateStatus',\n      headerName: 'Priority',\n      width: 120,\n      renderCell: (params: GridRenderCellParams) => {\n        const dueDateStatus = getDueDateStatus(params.row.submittedAt);\n        \n        if (dueDateStatus.status === 'overdue') {\n          return (\n            <Tooltip title={`Overdue by ${dueDateStatus.daysUntilDue} business days`}>\n              <Chip\n                icon={<ErrorIcon />}\n                label=\"OVERDUE\"\n                color=\"error\"\n                size=\"small\"\n                variant=\"filled\"\n              />\n            </Tooltip>\n          );\n        } else if (dueDateStatus.status === 'due-soon') {\n          return (\n            <Tooltip title={`Due in ${dueDateStatus.daysUntilDue} business days`}>\n              <Chip\n                icon={<WarningIcon />}\n                label=\"DUE SOON\"\n                color=\"warning\"\n                size=\"small\"\n                variant=\"filled\"\n              />\n            </Tooltip>\n          );\n        } else {\n          return (\n            <Chip\n              label=\"ON TIME\"\n              color=\"success\"\n              size=\"small\"\n              variant=\"outlined\"\n            />\n          );\n        }\n      }\n    },\n    {\n      field: 'contactEmail',\n      headerName: 'Contact',\n      width: 200\n    },\n    {\n      field: 'actions',\n      headerName: 'Actions',\n      width: 100,\n      sortable: false,\n      filterable: false,\n      renderCell: (params: GridRenderCellParams) => (\n        <Tooltip title=\"View Details\">\n          <IconButton\n            size=\"small\"\n            onClick={() => onRequestSelect?.(params.row)}\n          >\n            <ViewIcon />\n          </IconButton>\n        </Tooltip>\n      )\n    }\n  ];\n\n  const handleRowClick = (params: GridRowParams) => {\n    onRequestSelect?.(params.row as StoredRequest);\n  };\n\n  if (loading) {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\n        <CircularProgress />\n      </Box>\n    );\n  }\n\n  if (error) {\n    return (\n      <Alert severity=\"error\" sx={{ m: 2 }}>\n        {error}\n      </Alert>\n    );\n  }\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <Box sx={{ p: 3 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          Request Queue\n        </Typography>\n        <Typography variant=\"body1\" color=\"text.secondary\" gutterBottom>\n          Manage and track public records requests\n        </Typography>\n\n        {/* Filter Controls */}\n        <Paper elevation={1} sx={{ p: 2, mt: 2, mb: 3 }}>\n          <Typography variant=\"h6\" gutterBottom>\n            Filters & Search\n          </Typography>\n          \n          {/* Search Bar */}\n          <Box sx={{ mb: 2 }}>\n            <TextField\n              fullWidth\n              size=\"small\"\n              placeholder=\"Search requests by title, description, tracking ID, or contact email...\"\n              value={searchQuery}\n              onChange={handleSearchChange}\n              InputProps={{\n                startAdornment: <SearchIcon sx={{ color: 'text.secondary', mr: 1 }} />,\n                endAdornment: searchQuery && (\n                  <IconButton\n                    size=\"small\"\n                    onClick={() => setSearchQuery('')}\n                  >\n                    <ClearIcon />\n                  </IconButton>\n                )\n              }}\n            />\n          </Box>\n\n          <Stack direction={{ xs: 'column', sm: 'row' }} spacing={2} alignItems=\"center\" flexWrap=\"wrap\">\n            <FormControl sx={{ minWidth: 200 }} size=\"small\">\n              <InputLabel>Departments</InputLabel>\n              <Select\n                multiple\n                value={selectedDepartments}\n                onChange={handleDepartmentChange}\n                input={<OutlinedInput label=\"Departments\" />}\n                renderValue={(selected) => (\n                  <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                    {selected.map((value) => {\n                      const option = departmentOptions.find(opt => opt.value === value);\n                      return (\n                        <Chip \n                          key={value} \n                          label={option?.label || value} \n                          size=\"small\" \n                          color=\"primary\"\n                          variant=\"outlined\"\n                        />\n                      );\n                    })}\n                  </Box>\n                )}\n              >\n                {departmentOptions.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            <FormControl sx={{ minWidth: 200 }} size=\"small\">\n              <InputLabel>Status</InputLabel>\n              <Select\n                multiple\n                value={selectedStatuses}\n                onChange={handleStatusChange}\n                input={<OutlinedInput label=\"Status\" />}\n                renderValue={(selected) => (\n                  <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 0.5 }}>\n                    {selected.map((value) => {\n                      const option = statusOptions.find(opt => opt.value === value);\n                      return (\n                        <Chip \n                          key={value} \n                          label={option?.label || value} \n                          size=\"small\" \n                          color=\"secondary\"\n                          variant=\"outlined\"\n                        />\n                      );\n                    })}\n                  </Box>\n                )}\n              >\n                {statusOptions.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n\n            <DatePicker\n              label=\"Start Date\"\n              value={startDate}\n              onChange={(newValue) => setStartDate(newValue)}\n              slotProps={{\n                textField: {\n                  size: 'small',\n                  sx: { minWidth: 150 }\n                }\n              }}\n            />\n\n            <DatePicker\n              label=\"End Date\"\n              value={endDate}\n              onChange={(newValue) => setEndDate(newValue)}\n              slotProps={{\n                textField: {\n                  size: 'small',\n                  sx: { minWidth: 150 }\n                }\n              }}\n            />\n\n            {hasActiveFilters && (\n              <Chip\n                label=\"Clear All Filters\"\n                onClick={clearAllFilters}\n                onDelete={clearAllFilters}\n                color=\"default\"\n                variant=\"outlined\"\n                size=\"small\"\n              />\n            )}\n\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ ml: 'auto' }}>\n              Showing {filteredRequests.length} of {requests.length} requests\n            </Typography>\n          </Stack>\n        </Paper>\n\n        <Paper elevation={2}>\n          <DataGrid\n            rows={filteredRequests}\n            columns={columns}\n            getRowId={(row) => row.id || row.trackingId}\n            initialState={{\n              pagination: {\n                paginationModel: { page: 0, pageSize: 25 }\n              },\n              sorting: {\n                sortModel: [{ field: 'submittedAt', sort: 'desc' }]\n              }\n            }}\n            pageSizeOptions={[10, 25, 50, 100]}\n            onRowClick={handleRowClick}\n            sx={{\n              minHeight: 600,\n              '& .MuiDataGrid-row': {\n                cursor: 'pointer',\n                '&:hover': {\n                  backgroundColor: 'action.hover'\n                }\n              }\n            }}\n            disableRowSelectionOnClick\n          />\n        </Paper>\n      </Box>\n    </LocalizationProvider>\n  );\n}","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/contexts/AuthContext.tsx",["399","400","401","402","403","404","405","406","407"],[],"'use client';\n\nimport React, { createContext, useContext, useState, useEffect } from 'react';\n\ninterface AuthUser {\n  id: string;\n  email: string;\n  role: 'admin' | 'staff' | 'legal_reviewer';\n  name: string;\n}\n\ninterface AuthContextType {\n  user: AuthUser | null;\n  isLoading: boolean;\n  login: (email: string, password: string) => Promise<boolean>;\n  logout: () => void;\n  isAuthenticated: boolean;\n}\n\nconst AuthContext = createContext<AuthContextType | null>(null);\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n\ninterface AuthProviderProps {\n  children: React.ReactNode;\n}\n\nexport function AuthProvider({ children }: AuthProviderProps) {\n  const [user, setUser] = useState<AuthUser | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Mock users for development\n  const mockUsers: Record<string, { password: string; user: AuthUser }> = {\n    'admin@records.gov': {\n      password: 'admin123',\n      user: {\n        id: '1',\n        email: 'admin@records.gov',\n        role: 'admin',\n        name: 'System Administrator'\n      }\n    },\n    'staff@records.gov': {\n      password: 'staff123',\n      user: {\n        id: '2',\n        email: 'staff@records.gov',\n        role: 'staff',\n        name: 'Records Officer'\n      }\n    },\n    'legal@records.gov': {\n      password: 'legal123',\n      user: {\n        id: '3',\n        email: 'legal@records.gov',\n        role: 'legal_reviewer',\n        name: 'Legal Reviewer'\n      }\n    }\n  };\n\n  useEffect(() => {\n    // Check for existing session\n    const savedUser = localStorage.getItem('auth_user');\n    if (savedUser) {\n      try {\n        setUser(JSON.parse(savedUser));\n      } catch (error) {\n        console.error('Error parsing saved user:', error);\n        localStorage.removeItem('auth_user');\n      }\n    }\n    setIsLoading(false);\n  }, []);\n\n  const login = async (email: string, password: string): Promise<boolean> => {\n    setIsLoading(true);\n    \n    // Simulate API delay\n    await new Promise(resolve => setTimeout(resolve, 500));\n    \n    const mockUser = mockUsers[email];\n    if (mockUser && mockUser.password === password) {\n      setUser(mockUser.user);\n      localStorage.setItem('auth_user', JSON.stringify(mockUser.user));\n      setIsLoading(false);\n      return true;\n    }\n    \n    setIsLoading(false);\n    return false;\n  };\n\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('auth_user');\n  };\n\n  const value: AuthContextType = {\n    user,\n    isLoading,\n    login,\n    logout,\n    isAuthenticated: !!user\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/lib/firebase.ts",["408"],[],"/**\n * Firebase Configuration and Initialization\n * Supports both production Firebase and local emulator for development\n */\n\nimport { initializeApp, getApps, FirebaseApp } from 'firebase/app';\nimport { getFirestore, connectFirestoreEmulator, Firestore } from 'firebase/firestore';\n\n// Firebase configuration from environment variables\nconst firebaseConfig = {\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n};\n\n// Initialize Firebase app (singleton pattern)\nlet app: FirebaseApp;\nlet db: Firestore;\n\nexport const initializeFirebase = (): { app: FirebaseApp; db: Firestore } => {\n  // Only initialize if not already initialized\n  if (!getApps().length) {\n    app = initializeApp(firebaseConfig);\n  } else {\n    app = getApps()[0];\n  }\n\n  // Initialize Firestore\n  if (!db) {\n    db = getFirestore(app);\n\n    // Connect to Firestore emulator in development\n    const useEmulator = process.env.NEXT_PUBLIC_USE_FIREBASE_EMULATOR === 'true';\n    const emulatorHost = process.env.NEXT_PUBLIC_FIRESTORE_EMULATOR_HOST || 'localhost:8080';\n    \n    if (useEmulator && typeof window !== 'undefined') {\n      try {\n        // Only connect to emulator on client-side and if not already connected\n        const [host, port] = emulatorHost.split(':');\n        connectFirestoreEmulator(db, host, parseInt(port));\n        console.log('Connected to Firestore emulator at', emulatorHost);\n      } catch (error) {\n        console.warn('Failed to connect to Firestore emulator:', error);\n      }\n    }\n  }\n\n  return { app, db };\n};\n\n// Export initialized instances\nexport const { app: firebaseApp, db: firestore } = initializeFirebase();\n\n// Export the database instance for use throughout the app\nexport default firestore;","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/services/requestService.ts",["409","410","411","412","413","414","415","416"],[],"/**\n * Request Service\n * Handles all Firebase operations for public records requests\n */\n\nimport { \n  collection, \n  addDoc, \n  doc, \n  getDoc, \n  getDocs, \n  query, \n  where, \n  orderBy, \n  Timestamp,\n  UpdateData,\n  updateDoc \n} from 'firebase/firestore';\n\nimport firestore from '../lib/firebase';\nimport { RequestFormDataWithFiles } from '../components/request/RequestForm/types';\n\n// Request status enum\nexport type RequestStatus = 'submitted' | 'processing' | 'under_review' | 'completed' | 'rejected';\n\n// Extended request type with metadata\nexport interface StoredRequest {\n  id?: string;\n  trackingId: string;\n  title: string;\n  department: string;\n  description: string;\n  dateRange: {\n    startDate: string;\n    endDate: string;\n    preset?: string;\n  };\n  contactEmail: string;\n  status: RequestStatus;\n  submittedAt: Timestamp;\n  updatedAt: Timestamp;\n  attachmentCount: number;\n  attachmentPaths?: string[]; // Paths to uploaded files in storage\n}\n\n// Generate a unique tracking ID\nexport const generateTrackingId = (): string => {\n  const timestamp = Date.now().toString().slice(-6);\n  const random = Math.random().toString(36).substring(2, 6).toUpperCase();\n  return `PR-${timestamp}-${random}`;\n};\n\n// Save a new request to Firestore\nexport const saveRequest = async (\n  requestData: RequestFormDataWithFiles\n): Promise<{ id: string; trackingId: string }> => {\n  try {\n    const trackingId = generateTrackingId();\n    const now = Timestamp.now();\n\n    // Prepare the request document (excluding files which are handled separately)\n    const requestDoc: Omit<StoredRequest, 'id'> = {\n      trackingId,\n      title: requestData.title,\n      department: requestData.department,\n      description: requestData.description,\n      dateRange: requestData.dateRange,\n      contactEmail: requestData.contactEmail,\n      status: 'submitted',\n      submittedAt: now,\n      updatedAt: now,\n      attachmentCount: requestData.files?.length || 0,\n      // TODO: Handle file uploads to Firebase Storage and store paths\n      attachmentPaths: [],\n    };\n\n    // Add to Firestore\n    const docRef = await addDoc(collection(firestore, 'requests'), requestDoc);\n    console.log('Request saved with ID:', docRef.id);\n    return { id: docRef.id, trackingId };\n  } catch (error) {\n    console.error('Error saving request:', error);\n    throw new Error('Failed to save request. Please try again.');\n  }\n};\n\n// Get a request by tracking ID\nexport const getRequestByTrackingId = async (trackingId: string): Promise<StoredRequest | null> => {\n  try {\n    const q = query(\n      collection(firestore, 'requests'),\n      where('trackingId', '==', trackingId)\n    );\n    const querySnapshot = await getDocs(q);\n    if (querySnapshot.empty) {\n      return null;\n    }\n    \n    const doc = querySnapshot.docs[0];\n    return {\n      id: doc.id,\n      ...doc.data() as Omit<StoredRequest, 'id'>\n    };\n  } catch (error) {\n    console.error('Error fetching request by tracking ID:', error);\n    throw new Error('Failed to fetch request');\n  }\n};\n\n// Get a request by document ID\nexport const getRequestById = async (id: string): Promise<StoredRequest | null> => {\n  try {\n    const docRef = doc(firestore, 'requests', id);\n    const docSnap = await getDoc(docRef);\n    \n    if (!docSnap.exists()) {\n      return null;\n    }\n    \n    return {\n      id: docSnap.id,\n      ...docSnap.data() as Omit<StoredRequest, 'id'>\n    };\n  } catch (error) {\n    console.error('Error fetching request by ID:', error);\n    throw new Error('Failed to fetch request');\n  }\n};\n\n// Get all requests (for admin/staff views)\nexport const getAllRequests = async (): Promise<StoredRequest[]> => {\n  try {\n    const q = query(\n      collection(firestore, 'requests'),\n      orderBy('submittedAt', 'desc')\n    );\n    \n    const querySnapshot = await getDocs(q);\n    \n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data() as Omit<StoredRequest, 'id'>\n    }));\n  } catch (error) {\n    console.error('Error fetching all requests:', error);\n    throw new Error('Failed to fetch requests');\n  }\n};\n\n// Update request status\nexport const updateRequestStatus = async (\n  id: string, \n  status: RequestStatus\n): Promise<void> => {\n  try {\n    const docRef = doc(firestore, 'requests', id);\n    const updateData: UpdateData<StoredRequest> = {\n      status,\n      updatedAt: Timestamp.now()\n    };\n    \n    await updateDoc(docRef, updateData);\n    console.log('Request status updated:', id, status);\n  } catch (error) {\n    console.error('Error updating request status:', error);\n    throw new Error('Failed to update request status');\n  }\n};\n\n// Get requests by status (for staff queues)\nexport const getRequestsByStatus = async (status: RequestStatus): Promise<StoredRequest[]> => {\n  try {\n    const q = query(\n      collection(firestore, 'requests'),\n      where('status', '==', status),\n      orderBy('submittedAt', 'desc')\n    );\n    \n    const querySnapshot = await getDocs(q);\n    \n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data() as Omit<StoredRequest, 'id'>\n    }));\n  } catch (error) {\n    console.error('Error fetching requests by status:', error);\n    throw new Error('Failed to fetch requests');\n  }\n};\n\n// Get requests by department (for department-specific queues)\nexport const getRequestsByDepartment = async (department: string): Promise<StoredRequest[]> => {\n  try {\n    const q = query(\n      collection(firestore, 'requests'),\n      where('department', '==', department),\n      orderBy('submittedAt', 'desc')\n    );\n    \n    const querySnapshot = await getDocs(q);\n    \n    return querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data() as Omit<StoredRequest, 'id'>\n    }));\n  } catch (error) {\n    console.error('Error fetching requests by department:', error);\n    throw new Error('Failed to fetch requests');\n  }\n};","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/theme/index.ts",[],[],"/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/theme/theme.ts",["417"],[],"import { createTheme } from '@mui/material/styles';\nimport { tokens } from './tokens';\n\nexport const theme = createTheme({\n  palette: {\n    primary: {\n      main: tokens.colors.primary.main,\n      light: tokens.colors.primary.light,\n      dark: tokens.colors.primary.dark,\n      contrastText: tokens.colors.primary.contrastText,\n    },\n    secondary: {\n      main: tokens.colors.secondary.main,\n      light: tokens.colors.secondary.light,\n      dark: tokens.colors.secondary.dark,\n      contrastText: tokens.colors.secondary.contrastText,\n    },\n    error: {\n      main: tokens.colors.error.main,\n      light: tokens.colors.error.light,\n      dark: tokens.colors.error.dark,\n      contrastText: tokens.colors.error.contrastText,\n    },\n    warning: {\n      main: tokens.colors.warning.main,\n      light: tokens.colors.warning.light,\n      dark: tokens.colors.warning.dark,\n      contrastText: tokens.colors.warning.contrastText,\n    },\n    info: {\n      main: tokens.colors.info.main,\n      light: tokens.colors.info.light,\n      dark: tokens.colors.info.dark,\n      contrastText: tokens.colors.info.contrastText,\n    },\n    success: {\n      main: tokens.colors.success.main,\n      light: tokens.colors.success.light,\n      dark: tokens.colors.success.dark,\n      contrastText: tokens.colors.success.contrastText,\n    },\n    grey: tokens.colors.grey,\n  },\n  typography: {\n    fontFamily: tokens.typography.fontFamily.primary,\n    h1: {\n      fontSize: tokens.typography.fontSizes['4xl'],\n      fontWeight: tokens.typography.fontWeights.bold,\n      lineHeight: tokens.typography.lineHeights.tight,\n    },\n    h2: {\n      fontSize: tokens.typography.fontSizes['3xl'],\n      fontWeight: tokens.typography.fontWeights.bold,\n      lineHeight: tokens.typography.lineHeights.tight,\n    },\n    h3: {\n      fontSize: tokens.typography.fontSizes['2xl'],\n      fontWeight: tokens.typography.fontWeights.medium,\n      lineHeight: tokens.typography.lineHeights.tight,\n    },\n    h4: {\n      fontSize: tokens.typography.fontSizes.xl,\n      fontWeight: tokens.typography.fontWeights.medium,\n      lineHeight: tokens.typography.lineHeights.normal,\n    },\n    h5: {\n      fontSize: tokens.typography.fontSizes.lg,\n      fontWeight: tokens.typography.fontWeights.medium,\n      lineHeight: tokens.typography.lineHeights.normal,\n    },\n    h6: {\n      fontSize: tokens.typography.fontSizes.md,\n      fontWeight: tokens.typography.fontWeights.medium,\n      lineHeight: tokens.typography.lineHeights.normal,\n    },\n    body1: {\n      fontSize: tokens.typography.fontSizes.md,\n      lineHeight: tokens.typography.lineHeights.relaxed,\n    },\n    body2: {\n      fontSize: tokens.typography.fontSizes.sm,\n      lineHeight: tokens.typography.lineHeights.relaxed,\n    },\n    button: {\n      fontSize: tokens.typography.fontSizes.sm,\n      fontWeight: tokens.typography.fontWeights.medium,\n      textTransform: 'none',\n    },\n  },\n  shape: {\n    borderRadius: parseInt(tokens.radii.md),\n  },\n  spacing: (factor: number) => `${0.25 * factor}rem`,\n  breakpoints: {\n    values: {\n      xs: parseInt(tokens.breakpoints.xs),\n      sm: parseInt(tokens.breakpoints.sm),\n      md: parseInt(tokens.breakpoints.md),\n      lg: parseInt(tokens.breakpoints.lg),\n      xl: parseInt(tokens.breakpoints.xl),\n    },\n  },\n  components: {\n    MuiButton: {\n      styleOverrides: {\n        root: {\n          borderRadius: tokens.radii.md,\n          textTransform: 'none',\n          fontWeight: tokens.typography.fontWeights.medium,\n        },\n      },\n      defaultProps: {\n        disableElevation: true,\n      },\n    },\n    MuiPaper: {\n      styleOverrides: {\n        root: {\n          borderRadius: tokens.radii.lg,\n        },\n      },\n    },\n  },\n});\n\nexport type Theme = typeof theme;\n","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/theme/tokens.ts",["418","419","420","421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436"],[],"export const tokens = {\n  colors: {\n    primary: {\n      main: '#1976d2',\n      light: '#42a5f5',\n      dark: '#1565c0',\n      contrastText: '#ffffff'\n    },\n    secondary: {\n      main: '#9c27b0',\n      light: '#ba68c8',\n      dark: '#7b1fa2',\n      contrastText: '#ffffff'\n    },\n    error: {\n      main: '#d32f2f',\n      light: '#ef5350',\n      dark: '#c62828',\n      contrastText: '#ffffff'\n    },\n    warning: {\n      main: '#ed6c02',\n      light: '#ff9800',\n      dark: '#e65100',\n      contrastText: '#ffffff'\n    },\n    info: {\n      main: '#0288d1',\n      light: '#03a9f4',\n      dark: '#01579b',\n      contrastText: '#ffffff'\n    },\n    success: {\n      main: '#2e7d32',\n      light: '#4caf50',\n      dark: '#1b5e20',\n      contrastText: '#ffffff'\n    },\n    grey: {\n      50: '#fafafa',\n      100: '#f5f5f5',\n      200: '#eeeeee',\n      300: '#e0e0e0',\n      400: '#bdbdbd',\n      500: '#9e9e9e',\n      600: '#757575',\n      700: '#616161',\n      800: '#424242',\n      900: '#212121'\n    }\n  },\n  typography: {\n    fontFamily: {\n      primary: '\"Roboto\", \"Helvetica\", \"Arial\", sans-serif',\n      mono: '\"Roboto Mono\", \"Courier New\", monospace'\n    },\n    fontSizes: {\n      xs: '0.75rem',\n      sm: '0.875rem',\n      md: '1rem',\n      lg: '1.125rem',\n      xl: '1.25rem',\n      '2xl': '1.5rem',\n      '3xl': '1.875rem',\n      '4xl': '2.25rem'\n    },\n    fontWeights: {\n      light: 300,\n      regular: 400,\n      medium: 500,\n      bold: 700\n    },\n    lineHeights: {\n      none: 1,\n      tight: 1.25,\n      normal: 1.5,\n      relaxed: 1.75\n    }\n  },\n  spacing: {\n    xs: '0.25rem',\n    sm: '0.5rem',\n    md: '1rem',\n    lg: '1.5rem',\n    xl: '2rem',\n    '2xl': '4rem'\n  },\n  breakpoints: {\n    xs: '0px',\n    sm: '600px',\n    md: '900px',\n    lg: '1200px',\n    xl: '1536px'\n  },\n  shadows: {\n    none: 'none',\n    sm: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',\n    md: '0 4px 6px -1px rgba(0, 0, 0, 0.1)',\n    lg: '0 10px 15px -3px rgba(0, 0, 0, 0.1)',\n    xl: '0 20px 25px -5px rgba(0, 0, 0, 0.1)'\n  },\n  radii: {\n    none: '0',\n    sm: '0.125rem',\n    md: '0.25rem',\n    lg: '0.5rem',\n    xl: '0.75rem',\n    full: '9999px'\n  },\n  zIndices: {\n    hide: -1,\n    base: 0,\n    dropdown: 1000,\n    sticky: 1100,\n    modal: 1300,\n    popover: 1400,\n    tooltip: 1500\n  }\n} as const;\n","/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/types/index.d.ts",[],[],"/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/utils/createEmotionCache.ts",[],[],"/Users/ave.shalom/Documents/protogen_projects/public_records_lookup/src/utils/seedTestData.ts",["437","438","439","440","441","442","443","444","445","446","447","448","449","450","451","452","453"],[],"/**\n * Test Data Seeder for Staff Dashboard\n * Creates sample requests to test the staff console functionality\n */\n\nimport { saveRequest } from '../services/requestService';\nimport { RequestFormDataWithFiles } from '../components/request/RequestForm/types';\n\nconst sampleRequests: Omit<RequestFormDataWithFiles, 'files'>[] = [\n  {\n    title: 'Police Incident Report - Traffic Accident',\n    department: 'police',\n    description: 'Requesting police incident report for traffic accident on Main Street on September 10, 2025. Need details for insurance claim.',\n    dateRange: {\n      startDate: '2025-09-10',\n      endDate: '2025-09-10',\n      preset: 'Custom'\n    },\n    contactEmail: 'john.smith@email.com'\n  },\n  {\n    title: 'Fire Department Inspection Records',\n    department: 'fire',\n    description: 'Requesting fire safety inspection records for commercial building at 123 Business Ave for the past year.',\n    dateRange: {\n      startDate: '2024-09-01',\n      endDate: '2025-09-01',\n      preset: 'Last 12 months'\n    },\n    contactEmail: 'sarah.johnson@company.com'\n  },\n  {\n    title: 'City Council Meeting Minutes',\n    department: 'clerk',\n    description: 'Requesting meeting minutes and audio recordings from city council meetings in August 2025.',\n    dateRange: {\n      startDate: '2025-08-01',\n      endDate: '2025-08-31',\n      preset: 'Custom'\n    },\n    contactEmail: 'resident@community.org'\n  },\n  {\n    title: 'Department Budget Information',\n    department: 'finance',\n    description: 'Requesting detailed budget allocations and expenditures for Parks and Recreation department for fiscal year 2025.',\n    dateRange: {\n      startDate: '2025-01-01',\n      endDate: '2025-12-31',\n      preset: 'Current year'\n    },\n    contactEmail: 'transparency.advocate@watchdog.org'\n  },\n  {\n    title: 'Building Permit Applications',\n    department: 'other',\n    description: 'Requesting copies of building permit applications for residential properties on Oak Street submitted in the last 6 months.',\n    dateRange: {\n      startDate: '2025-03-16',\n      endDate: '2025-09-16',\n      preset: 'Last 6 months'\n    },\n    contactEmail: 'property.research@realty.com'\n  },\n  {\n    title: 'Police Body Camera Footage',\n    department: 'police',\n    description: 'Requesting body camera footage from incident #12345 that occurred on September 5, 2025, involving officer badge #789.',\n    dateRange: {\n      startDate: '2025-09-05',\n      endDate: '2025-09-05',\n      preset: 'Custom'\n    },\n    contactEmail: 'legal.inquiry@lawfirm.com'\n  },\n  {\n    title: 'Environmental Compliance Reports',\n    department: 'other',\n    description: 'Requesting environmental compliance reports and inspection records for waste management facilities in the city limits.',\n    dateRange: {\n      startDate: '2025-01-01',\n      endDate: '2025-09-16',\n      preset: 'Year to date'\n    },\n    contactEmail: 'environmental.group@greenwatch.org'\n  }\n];\n\nexport const seedTestData = async () => {\n  console.log('🌱 Seeding test data...');\n  \n  try {\n    for (let i = 0; i < sampleRequests.length; i++) {\n      const request = sampleRequests[i];\n      const requestWithFiles: RequestFormDataWithFiles = {\n        ...request,\n        files: [] // No files for test data\n      };\n      \n      const result = await saveRequest(requestWithFiles);\n      console.log(`✅ Created request ${i + 1}/${sampleRequests.length}: ${result.trackingId}`);\n      \n      // Add small delay to ensure different timestamps\n      await new Promise(resolve => setTimeout(resolve, 100));\n    }\n    \n    console.log('🎉 Test data seeding completed!');\n  } catch (error) {\n    console.error('❌ Error seeding test data:', error);\n  }\n};\n\n// Utility to clear all test data (use with caution)\nexport const clearTestData = async () => {\n  console.log('🧹 This would clear test data - implement if needed for development');\n  // TODO: Implement if needed for development cleanup\n};",{"ruleId":"454","severity":2,"message":"455","line":3,"column":1,"nodeType":null,"messageId":"456","endLine":17,"endColumn":45,"fix":"457"},{"ruleId":"458","severity":2,"message":"459","line":12,"column":19,"nodeType":"460","messageId":"461","endLine":12,"endColumn":20,"fix":"462"},{"ruleId":"458","severity":2,"message":"459","line":44,"column":33,"nodeType":"463","messageId":"461","endLine":45,"endColumn":1,"fix":"464"},{"ruleId":"454","severity":2,"message":"455","line":3,"column":1,"nodeType":null,"messageId":"456","endLine":9,"endColumn":66,"fix":"465"},{"ruleId":"454","severity":2,"message":"455","line":3,"column":1,"nodeType":null,"messageId":"456","endLine":8,"endColumn":60,"fix":"466"},{"ruleId":"454","severity":2,"message":"455","line":3,"column":1,"nodeType":null,"messageId":"456","endLine":7,"endColumn":74,"fix":"467"},{"ruleId":"454","severity":2,"message":"455","line":3,"column":1,"nodeType":null,"messageId":"456","endLine":5,"endColumn":57,"fix":"468"},{"ruleId":"454","severity":2,"message":"455","line":1,"column":1,"nodeType":null,"messageId":"456","endLine":3,"endColumn":70,"fix":"469"},{"ruleId":"470","severity":2,"message":"471","line":1,"column":31,"nodeType":"472","messageId":"473","endLine":1,"endColumn":37,"fix":"474"},{"ruleId":"470","severity":2,"message":"471","line":6,"column":10,"nodeType":"472","messageId":"473","endLine":6,"endColumn":41,"fix":"475"},{"ruleId":"470","severity":2,"message":"471","line":7,"column":16,"nodeType":"472","messageId":"473","endLine":7,"endColumn":59,"fix":"476"},{"ruleId":"454","severity":2,"message":"455","line":1,"column":1,"nodeType":null,"messageId":"456","endLine":3,"endColumn":49,"fix":"477"},{"ruleId":"478","severity":2,"message":"479","line":13,"column":78,"nodeType":"480","messageId":"481","suggestions":"482"},{"ruleId":"454","severity":2,"message":"455","line":1,"column":1,"nodeType":null,"messageId":"456","endLine":2,"endColumn":64,"fix":"483"},{"ruleId":"454","severity":2,"message":"455","line":3,"column":1,"nodeType":null,"messageId":"456","endLine":6,"endColumn":63,"fix":"484"},{"ruleId":"454","severity":2,"message":"455","line":3,"column":1,"nodeType":null,"messageId":"456","endLine":21,"endColumn":70,"fix":"485"},{"ruleId":"458","severity":2,"message":"459","line":16,"column":10,"nodeType":"460","messageId":"461","endLine":17,"endColumn":1,"fix":"486"},{"ruleId":"458","severity":2,"message":"459","line":71,"column":23,"nodeType":"463","messageId":"461","endLine":72,"endColumn":1,"fix":"487"},{"ruleId":"478","severity":2,"message":"479","line":254,"column":21,"nodeType":"480","messageId":"481","suggestions":"488"},{"ruleId":"454","severity":2,"message":"455","line":3,"column":1,"nodeType":null,"messageId":"456","endLine":6,"endColumn":67,"fix":"489"},{"ruleId":"458","severity":2,"message":"459","line":30,"column":27,"nodeType":"463","messageId":"461","endLine":30,"endColumn":28,"fix":"490"},{"ruleId":"458","severity":2,"message":"459","line":51,"column":27,"nodeType":"463","messageId":"461","endLine":51,"endColumn":28,"fix":"491"},{"ruleId":"478","severity":2,"message":"479","line":57,"column":18,"nodeType":"480","messageId":"481","suggestions":"492"},{"ruleId":"454","severity":2,"message":"455","line":1,"column":1,"nodeType":null,"messageId":"456","endLine":3,"endColumn":41,"fix":"493"},{"ruleId":"454","severity":2,"message":"455","line":1,"column":1,"nodeType":null,"messageId":"456","endLine":3,"endColumn":41,"fix":"494"},{"ruleId":"454","severity":2,"message":"455","line":3,"column":1,"nodeType":null,"messageId":"456","endLine":8,"endColumn":54,"fix":"495"},{"ruleId":"454","severity":2,"message":"455","line":1,"column":1,"nodeType":null,"messageId":"456","endLine":4,"endColumn":36,"fix":"496"},{"ruleId":"454","severity":2,"message":"455","line":1,"column":1,"nodeType":null,"messageId":"456","endLine":2,"endColumn":37,"fix":"497"},{"ruleId":"454","severity":2,"message":"455","line":3,"column":1,"nodeType":null,"messageId":"456","endLine":5,"endColumn":30,"fix":"498"},{"ruleId":"454","severity":2,"message":"455","line":1,"column":1,"nodeType":null,"messageId":"456","endLine":5,"endColumn":44,"fix":"499"},{"ruleId":"454","severity":2,"message":"455","line":1,"column":1,"nodeType":null,"messageId":"456","endLine":6,"endColumn":44,"fix":"500"},{"ruleId":"454","severity":2,"message":"455","line":1,"column":1,"nodeType":null,"messageId":"456","endLine":3,"endColumn":45,"fix":"501"},{"ruleId":"454","severity":2,"message":"455","line":3,"column":1,"nodeType":null,"messageId":"456","endLine":6,"endColumn":47,"fix":"502"},{"ruleId":"454","severity":2,"message":"455","line":1,"column":1,"nodeType":null,"messageId":"456","endLine":3,"endColumn":39,"fix":"503"},{"ruleId":"454","severity":2,"message":"455","line":3,"column":1,"nodeType":null,"messageId":"456","endLine":5,"endColumn":45,"fix":"504"},{"ruleId":"470","severity":2,"message":"471","line":21,"column":27,"nodeType":"472","messageId":"473","endLine":21,"endColumn":44,"fix":"505"},{"ruleId":"470","severity":2,"message":"471","line":22,"column":11,"nodeType":"472","messageId":"473","endLine":22,"endColumn":57,"fix":"506"},{"ruleId":"470","severity":2,"message":"471","line":23,"column":30,"nodeType":"472","messageId":"473","endLine":23,"endColumn":39,"fix":"507"},{"ruleId":"470","severity":2,"message":"471","line":25,"column":11,"nodeType":"472","messageId":"473","endLine":25,"endColumn":69,"fix":"508"},{"ruleId":"470","severity":2,"message":"471","line":27,"column":30,"nodeType":"472","messageId":"473","endLine":27,"endColumn":39,"fix":"509"},{"ruleId":"470","severity":2,"message":"471","line":29,"column":21,"nodeType":"472","messageId":"473","endLine":29,"endColumn":40,"fix":"510"},{"ruleId":"470","severity":2,"message":"471","line":31,"column":11,"nodeType":"472","messageId":"473","endLine":31,"endColumn":81,"fix":"511"},{"ruleId":"470","severity":2,"message":"471","line":32,"column":30,"nodeType":"472","messageId":"473","endLine":32,"endColumn":39,"fix":"512"},{"ruleId":"470","severity":2,"message":"471","line":34,"column":11,"nodeType":"472","messageId":"473","endLine":34,"endColumn":83,"fix":"513"},{"ruleId":"470","severity":2,"message":"471","line":35,"column":30,"nodeType":"472","messageId":"473","endLine":35,"endColumn":39,"fix":"514"},{"ruleId":"470","severity":2,"message":"471","line":37,"column":11,"nodeType":"472","messageId":"473","endLine":37,"endColumn":81,"fix":"515"},{"ruleId":"470","severity":2,"message":"471","line":38,"column":30,"nodeType":"472","messageId":"473","endLine":38,"endColumn":39,"fix":"516"},{"ruleId":"470","severity":2,"message":"471","line":40,"column":11,"nodeType":"472","messageId":"473","endLine":40,"endColumn":71,"fix":"517"},{"ruleId":"470","severity":2,"message":"471","line":41,"column":30,"nodeType":"472","messageId":"473","endLine":41,"endColumn":39,"fix":"518"},{"ruleId":"454","severity":2,"message":"455","line":1,"column":1,"nodeType":null,"messageId":"456","endLine":10,"endColumn":61,"fix":"519"},{"ruleId":"470","severity":2,"message":"471","line":37,"column":53,"nodeType":"472","messageId":"473","endLine":37,"endColumn":62,"fix":"520"},{"ruleId":"470","severity":2,"message":"471","line":37,"column":65,"nodeType":"472","messageId":"473","endLine":37,"endColumn":71,"fix":"521"},{"ruleId":"470","severity":2,"message":"471","line":37,"column":74,"nodeType":"472","messageId":"473","endLine":37,"endColumn":83,"fix":"522"},{"ruleId":"470","severity":2,"message":"471","line":37,"column":86,"nodeType":"472","messageId":"473","endLine":37,"endColumn":93,"fix":"523"},{"ruleId":"454","severity":2,"message":"455","line":3,"column":1,"nodeType":null,"messageId":"456","endLine":21,"endColumn":66,"fix":"524"},{"ruleId":"458","severity":2,"message":"459","line":13,"column":14,"nodeType":"460","messageId":"461","endLine":13,"endColumn":15,"fix":"525"},{"ruleId":"458","severity":2,"message":"459","line":18,"column":27,"nodeType":"460","messageId":"461","endLine":18,"endColumn":28,"fix":"526"},{"ruleId":"458","severity":2,"message":"459","line":32,"column":20,"nodeType":"463","messageId":"461","endLine":32,"endColumn":21,"fix":"527"},{"ruleId":"458","severity":2,"message":"459","line":47,"column":23,"nodeType":"463","messageId":"461","endLine":48,"endColumn":1,"fix":"528"},{"ruleId":"454","severity":2,"message":"455","line":1,"column":1,"nodeType":null,"messageId":"456","endLine":3,"endColumn":40,"fix":"529"},{"ruleId":"454","severity":2,"message":"455","line":3,"column":1,"nodeType":null,"messageId":"456","endLine":26,"endColumn":64,"fix":"530"},{"ruleId":"458","severity":2,"message":"459","line":206,"column":26,"nodeType":"472","messageId":"461","endLine":207,"endColumn":1,"fix":"531"},{"ruleId":"454","severity":2,"message":"455","line":1,"column":1,"nodeType":null,"messageId":"456","endLine":2,"endColumn":51,"fix":"532"},{"ruleId":"458","severity":2,"message":"459","line":17,"column":4,"nodeType":"533","messageId":"461","endLine":18,"endColumn":1,"fix":"534"},{"ruleId":"470","severity":2,"message":"471","line":20,"column":59,"nodeType":"472","messageId":"473","endLine":20,"endColumn":68,"fix":"535"},{"ruleId":"470","severity":2,"message":"471","line":20,"column":71,"nodeType":"472","messageId":"473","endLine":20,"endColumn":77,"fix":"536"},{"ruleId":"470","severity":2,"message":"471","line":20,"column":80,"nodeType":"472","messageId":"473","endLine":20,"endColumn":89,"fix":"537"},{"ruleId":"470","severity":2,"message":"471","line":20,"column":92,"nodeType":"472","messageId":"473","endLine":20,"endColumn":99,"fix":"538"},{"ruleId":"454","severity":2,"message":"455","line":1,"column":1,"nodeType":null,"messageId":"456","endLine":4,"endColumn":43,"fix":"539"},{"ruleId":"454","severity":2,"message":"455","line":3,"column":1,"nodeType":null,"messageId":"456","endLine":15,"endColumn":58,"fix":"540"},{"ruleId":"454","severity":2,"message":"455","line":1,"column":1,"nodeType":null,"messageId":"456","endLine":2,"endColumn":35,"fix":"541"},{"ruleId":"454","severity":2,"message":"455","line":3,"column":1,"nodeType":null,"messageId":"456","endLine":11,"endColumn":65,"fix":"542"},{"ruleId":"454","severity":2,"message":"455","line":3,"column":1,"nodeType":null,"messageId":"456","endLine":38,"endColumn":97,"fix":"543"},{"ruleId":"458","severity":2,"message":"459","line":20,"column":12,"nodeType":"460","messageId":"461","endLine":21,"endColumn":1,"fix":"544"},{"ruleId":"458","severity":2,"message":"459","line":26,"column":23,"nodeType":"460","messageId":"461","endLine":26,"endColumn":24,"fix":"545"},{"ruleId":"458","severity":2,"message":"459","line":35,"column":21,"nodeType":"460","messageId":"461","endLine":36,"endColumn":1,"fix":"546"},{"ruleId":"458","severity":2,"message":"459","line":73,"column":39,"nodeType":"533","messageId":"461","endLine":74,"endColumn":1,"fix":"547"},{"ruleId":"458","severity":2,"message":"459","line":81,"column":45,"nodeType":"533","messageId":"461","endLine":82,"endColumn":1,"fix":"548"},{"ruleId":"549","severity":1,"message":"550","line":87,"column":6,"nodeType":"551","endLine":87,"endColumn":8,"suggestions":"552"},{"ruleId":"549","severity":1,"message":"553","line":152,"column":6,"nodeType":"551","endLine":152,"endColumn":88,"suggestions":"554"},{"ruleId":"549","severity":1,"message":"555","line":161,"column":6,"nodeType":"551","endLine":161,"endColumn":78,"suggestions":"556"},{"ruleId":"458","severity":2,"message":"459","line":288,"column":23,"nodeType":"463","messageId":"461","endLine":289,"endColumn":1,"fix":"557"},{"ruleId":"458","severity":2,"message":"459","line":303,"column":17,"nodeType":"463","messageId":"461","endLine":304,"endColumn":1,"fix":"558"},{"ruleId":"458","severity":2,"message":"459","line":309,"column":14,"nodeType":"463","messageId":"461","endLine":310,"endColumn":1,"fix":"559"},{"ruleId":"458","severity":2,"message":"459","line":316,"column":47,"nodeType":"463","messageId":"461","endLine":317,"endColumn":1,"fix":"560"},{"ruleId":"458","severity":2,"message":"459","line":328,"column":8,"nodeType":"463","messageId":"461","endLine":329,"endColumn":1,"fix":"561"},{"ruleId":"458","severity":2,"message":"459","line":335,"column":33,"nodeType":"463","messageId":"461","endLine":336,"endColumn":1,"fix":"562"},{"ruleId":"458","severity":2,"message":"459","line":344,"column":8,"nodeType":"463","messageId":"461","endLine":345,"endColumn":1,"fix":"563"},{"ruleId":"458","severity":2,"message":"459","line":387,"column":8,"nodeType":"463","messageId":"461","endLine":388,"endColumn":1,"fix":"564"},{"ruleId":"458","severity":2,"message":"459","line":392,"column":17,"nodeType":"463","messageId":"461","endLine":393,"endColumn":1,"fix":"565"},{"ruleId":"458","severity":2,"message":"459","line":409,"column":8,"nodeType":"463","messageId":"461","endLine":410,"endColumn":1,"fix":"566"},{"ruleId":"458","severity":2,"message":"459","line":410,"column":6,"nodeType":"533","messageId":"461","endLine":411,"endColumn":1,"fix":"567"},{"ruleId":"458","severity":2,"message":"459","line":466,"column":18,"nodeType":"463","messageId":"461","endLine":467,"endColumn":1,"fix":"568"},{"ruleId":"458","severity":2,"message":"459","line":543,"column":40,"nodeType":"463","messageId":"461","endLine":544,"endColumn":1,"fix":"569"},{"ruleId":"458","severity":2,"message":"459","line":544,"column":18,"nodeType":"463","messageId":"461","endLine":545,"endColumn":1,"fix":"570"},{"ruleId":"458","severity":2,"message":"459","line":555,"column":40,"nodeType":"463","messageId":"461","endLine":556,"endColumn":1,"fix":"571"},{"ruleId":"458","severity":2,"message":"459","line":556,"column":18,"nodeType":"463","messageId":"461","endLine":557,"endColumn":1,"fix":"572"},{"ruleId":"458","severity":2,"message":"459","line":584,"column":59,"nodeType":"463","messageId":"461","endLine":585,"endColumn":1,"fix":"573"},{"ruleId":"458","severity":2,"message":"459","line":587,"column":68,"nodeType":"463","messageId":"461","endLine":588,"endColumn":1,"fix":"574"},{"ruleId":"458","severity":2,"message":"459","line":588,"column":16,"nodeType":"463","messageId":"461","endLine":589,"endColumn":1,"fix":"575"},{"ruleId":"458","severity":2,"message":"459","line":597,"column":50,"nodeType":"463","messageId":"461","endLine":598,"endColumn":1,"fix":"576"},{"ruleId":"458","severity":2,"message":"459","line":598,"column":18,"nodeType":"463","messageId":"461","endLine":599,"endColumn":1,"fix":"577"},{"ruleId":"458","severity":2,"message":"459","line":599,"column":16,"nodeType":"463","messageId":"461","endLine":600,"endColumn":1,"fix":"578"},{"ruleId":"454","severity":2,"message":"455","line":3,"column":1,"nodeType":null,"messageId":"456","endLine":3,"endColumn":79,"fix":"579"},{"ruleId":"458","severity":2,"message":"459","line":46,"column":37,"nodeType":"463","messageId":"461","endLine":47,"endColumn":1,"fix":"580"},{"ruleId":"458","severity":2,"message":"459","line":47,"column":8,"nodeType":"463","messageId":"461","endLine":48,"endColumn":1,"fix":"581"},{"ruleId":"458","severity":2,"message":"459","line":55,"column":32,"nodeType":"463","messageId":"461","endLine":56,"endColumn":1,"fix":"582"},{"ruleId":"458","severity":2,"message":"459","line":56,"column":8,"nodeType":"463","messageId":"461","endLine":57,"endColumn":1,"fix":"583"},{"ruleId":"458","severity":2,"message":"459","line":64,"column":31,"nodeType":"463","messageId":"461","endLine":65,"endColumn":1,"fix":"584"},{"ruleId":"458","severity":2,"message":"459","line":65,"column":8,"nodeType":"463","messageId":"461","endLine":66,"endColumn":1,"fix":"585"},{"ruleId":"458","severity":2,"message":"459","line":66,"column":6,"nodeType":"463","messageId":"461","endLine":67,"endColumn":1,"fix":"586"},{"ruleId":"458","severity":2,"message":"459","line":111,"column":28,"nodeType":"463","messageId":"461","endLine":112,"endColumn":1,"fix":"587"},{"ruleId":"454","severity":2,"message":"455","line":6,"column":1,"nodeType":null,"messageId":"456","endLine":7,"endColumn":88,"fix":"588"},{"ruleId":"454","severity":2,"message":"455","line":6,"column":1,"nodeType":null,"messageId":"456","endLine":21,"endColumn":84,"fix":"589"},{"ruleId":"458","severity":2,"message":"459","line":17,"column":12,"nodeType":"460","messageId":"461","endLine":17,"endColumn":13,"fix":"590"},{"ruleId":"458","severity":2,"message":"459","line":102,"column":49,"nodeType":"591","messageId":"461","endLine":103,"endColumn":1,"fix":"592"},{"ruleId":"458","severity":2,"message":"459","line":122,"column":53,"nodeType":"591","messageId":"461","endLine":123,"endColumn":1,"fix":"593"},{"ruleId":"458","severity":2,"message":"459","line":142,"column":49,"nodeType":"591","messageId":"461","endLine":143,"endColumn":1,"fix":"594"},{"ruleId":"458","severity":2,"message":"459","line":159,"column":33,"nodeType":"463","messageId":"461","endLine":160,"endColumn":1,"fix":"595"},{"ruleId":"458","severity":2,"message":"459","line":183,"column":49,"nodeType":"591","messageId":"461","endLine":184,"endColumn":1,"fix":"596"},{"ruleId":"458","severity":2,"message":"459","line":204,"column":49,"nodeType":"591","messageId":"461","endLine":205,"endColumn":1,"fix":"597"},{"ruleId":"454","severity":2,"message":"455","line":1,"column":1,"nodeType":null,"messageId":"456","endLine":2,"endColumn":35,"fix":"598"},{"ruleId":"458","severity":2,"message":"459","line":7,"column":30,"nodeType":"463","messageId":"461","endLine":8,"endColumn":1,"fix":"599"},{"ruleId":"458","severity":2,"message":"459","line":13,"column":30,"nodeType":"463","messageId":"461","endLine":14,"endColumn":1,"fix":"600"},{"ruleId":"458","severity":2,"message":"459","line":19,"column":30,"nodeType":"463","messageId":"461","endLine":20,"endColumn":1,"fix":"601"},{"ruleId":"458","severity":2,"message":"459","line":25,"column":30,"nodeType":"463","messageId":"461","endLine":26,"endColumn":1,"fix":"602"},{"ruleId":"458","severity":2,"message":"459","line":31,"column":30,"nodeType":"463","messageId":"461","endLine":32,"endColumn":1,"fix":"603"},{"ruleId":"458","severity":2,"message":"459","line":37,"column":30,"nodeType":"463","messageId":"461","endLine":38,"endColumn":1,"fix":"604"},{"ruleId":"458","severity":2,"message":"459","line":49,"column":21,"nodeType":"463","messageId":"461","endLine":50,"endColumn":1,"fix":"605"},{"ruleId":"458","severity":2,"message":"459","line":50,"column":6,"nodeType":"463","messageId":"461","endLine":51,"endColumn":1,"fix":"606"},{"ruleId":"458","severity":2,"message":"459","line":55,"column":54,"nodeType":"463","messageId":"461","endLine":56,"endColumn":1,"fix":"607"},{"ruleId":"458","severity":2,"message":"459","line":65,"column":23,"nodeType":"463","messageId":"461","endLine":66,"endColumn":1,"fix":"608"},{"ruleId":"458","severity":2,"message":"459","line":71,"column":16,"nodeType":"463","messageId":"461","endLine":72,"endColumn":1,"fix":"609"},{"ruleId":"458","severity":2,"message":"459","line":77,"column":20,"nodeType":"463","messageId":"461","endLine":78,"endColumn":1,"fix":"610"},{"ruleId":"458","severity":2,"message":"459","line":78,"column":6,"nodeType":"463","messageId":"461","endLine":79,"endColumn":1,"fix":"611"},{"ruleId":"458","severity":2,"message":"459","line":86,"column":18,"nodeType":"463","messageId":"461","endLine":87,"endColumn":1,"fix":"612"},{"ruleId":"458","severity":2,"message":"459","line":93,"column":17,"nodeType":"463","messageId":"461","endLine":94,"endColumn":1,"fix":"613"},{"ruleId":"458","severity":2,"message":"459","line":100,"column":46,"nodeType":"463","messageId":"461","endLine":101,"endColumn":1,"fix":"614"},{"ruleId":"458","severity":2,"message":"459","line":108,"column":19,"nodeType":"463","messageId":"461","endLine":109,"endColumn":1,"fix":"615"},{"ruleId":"458","severity":2,"message":"459","line":117,"column":18,"nodeType":"463","messageId":"461","endLine":118,"endColumn":1,"fix":"616"},{"ruleId":"458","severity":2,"message":"459","line":118,"column":4,"nodeType":"463","messageId":"461","endLine":119,"endColumn":1,"fix":"617"},{"ruleId":"454","severity":2,"message":"455","line":6,"column":1,"nodeType":null,"messageId":"456","endLine":7,"endColumn":84,"fix":"618"},{"ruleId":"458","severity":2,"message":"459","line":17,"column":23,"nodeType":"463","messageId":"461","endLine":18,"endColumn":1,"fix":"619"},{"ruleId":"458","severity":2,"message":"459","line":19,"column":41,"nodeType":"463","messageId":"461","endLine":20,"endColumn":1,"fix":"620"},{"ruleId":"458","severity":2,"message":"459","line":28,"column":31,"nodeType":"463","messageId":"461","endLine":29,"endColumn":1,"fix":"621"},{"ruleId":"458","severity":2,"message":"459","line":30,"column":46,"nodeType":"463","messageId":"461","endLine":31,"endColumn":1,"fix":"622"},{"ruleId":"458","severity":2,"message":"459","line":39,"column":23,"nodeType":"463","messageId":"461","endLine":40,"endColumn":1,"fix":"623"},{"ruleId":"458","severity":2,"message":"459","line":41,"column":43,"nodeType":"463","messageId":"461","endLine":42,"endColumn":1,"fix":"624"},{"ruleId":"458","severity":2,"message":"459","line":50,"column":29,"nodeType":"463","messageId":"461","endLine":51,"endColumn":1,"fix":"625"},{"ruleId":"458","severity":2,"message":"459","line":52,"column":55,"nodeType":"463","messageId":"461","endLine":53,"endColumn":1,"fix":"626"},{"ruleId":"458","severity":2,"message":"459","line":61,"column":30,"nodeType":"463","messageId":"461","endLine":62,"endColumn":1,"fix":"627"},{"ruleId":"458","severity":2,"message":"459","line":63,"column":49,"nodeType":"463","messageId":"461","endLine":64,"endColumn":1,"fix":"628"},{"ruleId":"458","severity":2,"message":"459","line":72,"column":23,"nodeType":"463","messageId":"461","endLine":73,"endColumn":1,"fix":"629"},{"ruleId":"458","severity":2,"message":"459","line":74,"column":46,"nodeType":"463","messageId":"461","endLine":75,"endColumn":1,"fix":"630"},{"ruleId":"458","severity":2,"message":"459","line":83,"column":29,"nodeType":"463","messageId":"461","endLine":84,"endColumn":1,"fix":"631"},{"ruleId":"458","severity":2,"message":"459","line":85,"column":55,"nodeType":"463","messageId":"461","endLine":86,"endColumn":1,"fix":"632"},{"ruleId":"458","severity":2,"message":"459","line":86,"column":4,"nodeType":"533","messageId":"461","endLine":87,"endColumn":1,"fix":"633"},{"ruleId":"458","severity":2,"message":"459","line":97,"column":18,"nodeType":"463","messageId":"461","endLine":97,"endColumn":19,"fix":"634"},"simple-import-sort/imports","Run autofix to sort these imports!","sort",{"range":"635","text":"636"},"comma-dangle","Missing trailing comma.","ImportSpecifier","missing",{"range":"637","text":"638"},"Property",{"range":"639","text":"640"},{"range":"641","text":"642"},{"range":"643","text":"644"},{"range":"645","text":"646"},{"range":"647","text":"648"},{"range":"649","text":"650"},"quotes","Strings must use singlequote.","Literal","wrongQuotes",{"range":"651","text":"652"},{"range":"653","text":"654"},{"range":"655","text":"656"},{"range":"657","text":"658"},"react/no-unescaped-entities","`'` can be escaped with `&apos;`, `&lsquo;`, `&#39;`, `&rsquo;`.","JSXText","unescapedEntityAlts",["659","660","661","662"],{"range":"663","text":"664"},{"range":"665","text":"666"},{"range":"667","text":"668"},{"range":"669","text":"670"},{"range":"671","text":"672"},["673","674","675","676"],{"range":"677","text":"678"},{"range":"679","text":"680"},{"range":"681","text":"680"},["682","683","684","685"],{"range":"686","text":"687"},{"range":"688","text":"689"},{"range":"690","text":"691"},{"range":"692","text":"693"},{"range":"694","text":"695"},{"range":"696","text":"697"},{"range":"698","text":"699"},{"range":"700","text":"701"},{"range":"702","text":"703"},{"range":"704","text":"705"},{"range":"706","text":"707"},{"range":"708","text":"709"},{"range":"710","text":"711"},{"range":"712","text":"713"},{"range":"714","text":"715"},{"range":"716","text":"717"},{"range":"718","text":"719"},{"range":"720","text":"721"},{"range":"722","text":"723"},{"range":"724","text":"725"},{"range":"726","text":"727"},{"range":"728","text":"725"},{"range":"729","text":"730"},{"range":"731","text":"725"},{"range":"732","text":"733"},{"range":"734","text":"715"},{"range":"735","text":"736"},{"range":"737","text":"738"},{"range":"739","text":"740"},{"range":"741","text":"742"},{"range":"743","text":"744"},{"range":"745","text":"746"},{"range":"747","text":"748"},{"range":"749","text":"750"},{"range":"751","text":"752"},{"range":"753","text":"672"},{"range":"754","text":"755"},{"range":"756","text":"757"},{"range":"758","text":"759"},{"range":"760","text":"761"},"ObjectExpression",{"range":"762","text":"763"},{"range":"764","text":"738"},{"range":"765","text":"740"},{"range":"766","text":"742"},{"range":"767","text":"744"},{"range":"768","text":"769"},{"range":"770","text":"771"},{"range":"772","text":"773"},{"range":"774","text":"775"},{"range":"776","text":"777"},{"range":"778","text":"779"},{"range":"780","text":"781"},{"range":"782","text":"783"},{"range":"784","text":"785"},{"range":"786","text":"785"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'loadFiltersFromURL'. Either include it or remove the dependency array.","ArrayExpression",["787"],"React Hook useEffect has a missing dependency: 'applyFilters'. Either include it or remove the dependency array.",["788"],"React Hook useEffect has a missing dependency: 'updateURL'. Either include it or remove the dependency array.",["789"],{"range":"790","text":"672"},{"range":"791","text":"792"},{"range":"793","text":"794"},{"range":"795","text":"796"},{"range":"797","text":"796"},{"range":"798","text":"796"},{"range":"799","text":"800"},{"range":"801","text":"800"},{"range":"802","text":"803"},{"range":"804","text":"796"},{"range":"805","text":"785"},{"range":"806","text":"807"},{"range":"808","text":"809"},{"range":"810","text":"811"},{"range":"812","text":"809"},{"range":"813","text":"811"},{"range":"814","text":"811"},{"range":"815","text":"816"},{"range":"817","text":"818"},{"range":"819","text":"820"},{"range":"821","text":"811"},{"range":"822","text":"818"},{"range":"823","text":"824"},{"range":"825","text":"826"},{"range":"827","text":"800"},{"range":"828","text":"829"},{"range":"830","text":"800"},{"range":"831","text":"832"},{"range":"833","text":"800"},{"range":"834","text":"835"},{"range":"836","text":"837"},{"range":"838","text":"839"},{"range":"840","text":"841"},{"range":"842","text":"843"},"SpreadElement",{"range":"844","text":"845"},{"range":"846","text":"845"},{"range":"847","text":"845"},{"range":"848","text":"796"},{"range":"849","text":"845"},{"range":"850","text":"845"},{"range":"851","text":"852"},{"range":"853","text":"854"},{"range":"855","text":"854"},{"range":"856","text":"854"},{"range":"857","text":"854"},{"range":"858","text":"854"},{"range":"859","text":"854"},{"range":"860","text":"861"},{"range":"862","text":"835"},{"range":"863","text":"864"},{"range":"865","text":"866"},{"range":"867","text":"868"},{"range":"869","text":"870"},{"range":"871","text":"835"},{"range":"872","text":"873"},{"range":"874","text":"875"},{"range":"876","text":"877"},{"range":"878","text":"879"},{"range":"880","text":"881"},{"range":"882","text":"883"},{"range":"884","text":"885"},{"range":"886","text":"887"},{"range":"888","text":"889"},{"range":"890","text":"891"},{"range":"892","text":"893"},{"range":"894","text":"887"},{"range":"895","text":"896"},{"range":"897","text":"898"},{"range":"899","text":"900"},{"range":"901","text":"902"},{"range":"903","text":"904"},{"range":"905","text":"887"},{"range":"906","text":"907"},{"range":"908","text":"909"},{"range":"910","text":"911"},{"range":"912","text":"763"},{"range":"913","text":"914"},[15,412],"import React, { useState } from 'react';\nimport { Login as LoginIcon } from '@mui/icons-material';\nimport { \n  Alert, \n  Box, \n  Button, \n  CircularProgress, \n  Container,\n  Paper, \n  TextField, \n  Typography} from '@mui/material';\nimport { useRouter } from 'next/navigation';\n\nimport { useAuth } from '../../../contexts/AuthContext';\nimport { AuthProvider } from '../../../contexts/AuthContext';",[149,168],"CircularProgress, \n}",[1103,1119],"'center',\n      }",[15,440],"import React, { useState } from 'react';\nimport { Box } from '@mui/material';\n\nimport { ProtectedRoute } from '../../../components/auth/ProtectedRoute';\nimport { AdminLayout } from '../../../components/layouts/AdminLayout';\nimport { StaffDashboard } from '../../../components/staff/StaffDashboard';\nimport { AuthProvider } from '../../../contexts/AuthContext';\nimport { StoredRequest } from '../../../services/requestService';",[15,397],"import { useState } from 'react';\nimport { Alert, Box, Button, CircularProgress,Typography } from '@mui/material';\n\nimport { ProtectedRoute } from '../../../components/auth/ProtectedRoute';\nimport { AdminLayout } from '../../../components/layouts/AdminLayout';\nimport { AuthProvider } from '../../../contexts/AuthContext';\nimport { seedTestData } from '../../../utils/seedTestData';",[15,355],"import { useEffect, useState } from 'react';\nimport { Alert, Box, CircularProgress, Typography } from '@mui/material';\nimport { useSearchParams } from 'next/navigation';\n\nimport { RequestConfirmation } from '../../components/request/RequestConfirmation';\nimport { getRequestByTrackingId,StoredRequest } from '../../services/requestService';",[15,160],"import { Suspense } from 'react';\nimport { Box, CircularProgress } from '@mui/material';\n\nimport ConfirmationContent from './ConfirmationContent';",[0,134],"import React from 'react';\nimport type { Metadata } from \"next\";\n\nimport { ThemeProvider } from '@/components/providers/ThemeProvider';",[30,36],"'next'",[181,212],"'Public Records Request Portal'",[229,272],"'Submit and manage public records requests'",[0,180],"import { Box, Typography } from '@mui/material';\n\nimport { PublicLayout } from '../components/layouts/PublicLayout';\nimport { RequestForm } from '../components/request/RequestForm';",{"messageId":"915","data":"916","fix":"917","desc":"918"},{"messageId":"915","data":"919","fix":"920","desc":"921"},{"messageId":"915","data":"922","fix":"923","desc":"924"},{"messageId":"915","data":"925","fix":"926","desc":"927"},[0,125],"import { Container, Paper,Typography } from '@mui/material';\n\nimport { RequestForm } from '@/components/request/RequestForm';",[15,227],"import React, { useState } from 'react';\nimport { Box } from '@mui/material';\n\nimport { StaffDashboard } from '../../components/staff/StaffDashboard';\nimport { StoredRequest } from '../../services/requestService';",[15,471],"import React, { useState } from 'react';\nimport { Search as SearchIcon } from '@mui/icons-material';\nimport {\n  Alert,\n  Box,\n  Button,\n  Card,\n  CardContent,\n  Chip,\n  CircularProgress,\n  Divider,\n  Grid,\n  Paper,\n  TextField,\n  Typography} from '@mui/material';\nimport { format } from 'date-fns';\n\nimport { PublicLayout } from '../../components/layouts/PublicLayout';\nimport { getRequestByTrackingId,StoredRequest } from '../../services/requestService';",[188,197],"Divider,\n}",[1959,1972],"'Other',\n    }",{"messageId":"915","data":"928","fix":"929","desc":"918"},{"messageId":"915","data":"930","fix":"931","desc":"921"},{"messageId":"915","data":"932","fix":"933","desc":"924"},{"messageId":"915","data":"934","fix":"935","desc":"927"},[15,222],"import React, { useEffect } from 'react';\nimport { Box, CircularProgress, Typography } from '@mui/material';\nimport { useRouter } from 'next/navigation';\n\nimport { useAuth } from '../../contexts/AuthContext';",[858,874],"'100vh', \n      }",[1380,1396],{"messageId":"915","data":"936","fix":"937","desc":"918"},{"messageId":"915","data":"938","fix":"939","desc":"921"},{"messageId":"915","data":"940","fix":"941","desc":"924"},{"messageId":"915","data":"942","fix":"943","desc":"927"},[0,134],"import { CircularProgress } from '@mui/material';\n\nimport { StyledButton } from './styles';\nimport { type ButtonProps } from './types';",[0,145],"import { Button as MuiButton, styled } from '@mui/material';\n\nimport { type Theme } from '@/theme/theme';\nimport { tokens } from '@/theme/tokens';",[15,312],"import React from 'react';\nimport { ExitToApp } from '@mui/icons-material';\nimport { AppBar, Box, Button, Chip,Container, Toolbar, Typography } from '@mui/material';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';\n\nimport { useAuth } from '../../contexts/AuthContext';",[0,165],"import { type ReactNode } from 'react';\n\nimport { Footer } from '../Footer';\nimport { Header } from '../Header';\n\nimport { LayoutContent,LayoutRoot } from './styles';",[0,83],"import { Box } from '@mui/material';\nimport { styled } from '@mui/material/styles';",[15,156],"import React from 'react';\nimport { AppBar, Box, Button,Container, Toolbar, Typography } from '@mui/material';\nimport Link from 'next/link';",[0,227],"import React from 'react';\nimport Link from '@mui/material/Link';\nimport Typography from '@mui/material/Typography';\n\nimport { FooterContent, FooterLinks,FooterRoot } from './styles';\nimport type { FooterProps } from './types';",[0,294],"import React from 'react';\nimport SearchIcon from '@mui/icons-material/Search';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n\nimport { HeaderActions,HeaderRoot, HeaderToolbar } from './styles';\nimport type { HeaderProps } from './types';",[0,134],"import AppBar from '@mui/material/AppBar';\nimport { styled } from '@mui/material/styles';\nimport Toolbar from '@mui/material/Toolbar';",[15,203],"import React from 'react';\nimport { AppBar, Box, Button,Container, Toolbar, Typography } from '@mui/material';\nimport Link from 'next/link';\nimport { usePathname } from 'next/navigation';",[0,165],"import CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider as MuiThemeProvider } from '@mui/material/styles';\n\nimport { theme } from '@/theme/theme';",[15,173],"import React from 'react';\nimport { CssBaseline } from '@mui/material';\nimport { createTheme,ThemeProvider as MuiThemeProvider } from '@mui/material/styles';",[444,461],"'#6b6b6b #2b2b2b'",[473,519],"'&::-webkit-scrollbar, & *::-webkit-scrollbar'",[552,561],"'#2b2b2b'",[586,644],"'&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb'",[706,715],"'#6b6b6b'",[764,783],"'3px solid #2b2b2b'",[808,878],"'&::-webkit-scrollbar-thumb:focus, & *::-webkit-scrollbar-thumb:focus'",[911,920],"'#959595'",[945,1017],"'&::-webkit-scrollbar-thumb:active, & *::-webkit-scrollbar-thumb:active'",[1050,1059],[1084,1154],"'&::-webkit-scrollbar-thumb:hover, & *::-webkit-scrollbar-thumb:hover'",[1187,1196],[1221,1281],"'&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner'",[1314,1323],[0,192],"import VisibilityIcon from '@mui/icons-material/Visibility';\nimport {\n  Chip,\n  IconButton,\n  List,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  Typography,\n} from '@mui/material';",[787,796],"'warning'",[799,805],"'info'",[808,817],"'success'",[820,827],"'error'",[15,400],"import React from 'react';\nimport { \n  CheckCircle as CheckCircleIcon,\n  ContentCopy as CopyIcon,\n  Download as DownloadIcon \n} from '@mui/icons-material';\nimport { \n  Box, \n  Button,\n  Card,\n  CardContent, \n  Chip, \n  Divider,\n  Grid, \n  Paper, \n  Typography} from '@mui/material';\nimport { format } from 'date-fns';\n\nimport { StoredRequest } from '../../../services/requestService';",[134,148],"CardContent, \n}",[256,271],"DownloadIcon, \n}",[607,627],"onStartNewRequest, \n}",[1176,1189],[0,169],"import { fireEvent, render, screen, waitFor } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\n\nimport { RequestForm } from '../index';",[15,645],"import React, { useState } from 'react';\nimport { Controller,useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport {\n  Alert,\n  Box,\n  Button,\n  CircularProgress,\n  Divider,\n  FormControl,\n  FormHelperText,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  Snackbar,\n  TextField,\n  Typography,\n} from '@mui/material';\n\nimport { saveRequest } from '../../../services/requestService';\nimport DateRangePicker, { DateRange } from '../../shared/DateRangePicker';\nimport FileUpload from '../../shared/FileUpload';\n\nimport { RequestFormData, RequestFormDataWithFiles, requestSchema } from './types';",[6290,6315],"'image/png',\n            ]",[0,142],"import { Box, Chip,List, ListItem, ListItemText, Paper, Typography } from '@mui/material';\nimport { type Theme } from '@mui/material/styles';",[454,457],"},\n]",[518,527],[530,536],[539,548],[551,558],[0,203],"import { fireEvent,render, screen } from '@testing-library/react';\nimport userEvent from '@testing-library/user-event';\n\nimport type { DateRange } from '../index';\nimport DateRangePicker from '../index';",[15,257],"import React, { useState } from 'react';\nimport {\n  Box,\n  FormControl,\n  FormHelperText,\n  Grid,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport { SelectChangeEvent } from '@mui/material/Select';",[0,102],"import { fireEvent,render, screen } from '@testing-library/react';\n\nimport FileUpload from '../index';",[15,589],"import React, { useCallback, useState } from 'react';\nimport { FileRejection,useDropzone } from 'react-dropzone';\nimport CloudUploadIcon from '@mui/icons-material/CloudUpload';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport DescriptionIcon from '@mui/icons-material/Description';\nimport ImageIcon from '@mui/icons-material/Image';\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\nimport { Alert, Box, Button, Card, CardContent,IconButton, LinearProgress, Typography } from '@mui/material';\nimport { styled, Theme } from '@mui/material/styles';",[15,977],"import React, { useEffect,useState } from 'react';\nimport { \n  Clear as ClearIcon,\n  Error as ErrorIcon,\n  Search as SearchIcon,\n  Visibility as ViewIcon,\n  Warning as WarningIcon} from '@mui/icons-material';\nimport {\n  Alert,\n  Box,\n  Chip,\n  CircularProgress,\n  FormControl,\n  IconButton,\n  InputLabel,\n  MenuItem,\n  OutlinedInput,\n  Paper,\n  Select,\n  Stack,\n  TextField,\n  Tooltip,\n  Typography} from '@mui/material';\nimport { \n  DataGrid, \n  GridColDef, \n  GridRenderCellParams, \n  GridRowParams} from '@mui/x-data-grid';\nimport { DatePicker, LocalizationProvider } from '@mui/x-date-pickers';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { addBusinessDays, differenceInBusinessDays, endOfDay,format, isAfter, isBefore, startOfDay } from 'date-fns';\nimport { usePathname,useRouter, useSearchParams } from 'next/navigation';\n\nimport { getAllRequests, RequestStatus,StoredRequest } from '../../../services/requestService';",[322,333],"TextField,\n}",[413,436],"GridRenderCellParams, \n}",[722,733],"ClearIcon,\n}",[2366,2371],"},\n  ]",[2643,2648],{"desc":"944","fix":"945"},{"desc":"946","fix":"947"},{"desc":"948","fix":"949"},[9252,9265],[9641,9650],"150,\n    }",[9745,9752],"1,\n    }",[9919,9926],"),\n    }",[10221,10228],[10381,10388],[10625,10632],"},\n    }",[11860,11867],[11946,11955],"200,\n    }",[12366,12373],[12372,12377],[14027,14044],"),\n              }",[16950,16969],"},\n                }",[16968,16985],"},\n              }",[17275,17294],[17293,17310],[18150,18167],[18260,18277],"],\n              }",[18276,18291],"},\n            }",[18566,18598],"'action.hover',\n                }",[18597,18614],[18613,18628],[15,93],"import React, { createContext, useContext, useEffect,useState } from 'react';",[1157,1187],"'System Administrator',\n      }",[1186,1193],[1354,1379],"'Records Officer',\n      }",[1378,1385],[1555,1579],"'Legal Reviewer',\n      }",[1578,1585],[1584,1589],"},\n  }",[2653,2661],"user,\n  }",[126,281],"import { FirebaseApp,getApps, initializeApp } from 'firebase/app';\nimport { connectFirestoreEmulator, Firestore,getFirestore } from 'firebase/firestore';",[91,384],"import { \n  addDoc, \n  collection, \n  doc, \n  getDoc, \n  getDocs, \n  orderBy, \n  query, \n  Timestamp,\n  UpdateData,\n  updateDoc, \n  where} from 'firebase/firestore';\n\nimport { RequestFormDataWithFiles } from '../components/request/RequestForm/types';\nimport firestore from '../lib/firebase';",[219,231],"updateDoc, \n}",[2877,2884],">,\n    }",[3398,3405],[3933,3940],[4364,4371],[5074,5081],[5708,5715],[0,86],"import { createTheme } from '@mui/material/styles';\n\nimport { tokens } from './tokens';",[141,156],"'#ffffff',\n    }",[265,280],[385,400],[507,522],[626,641],[748,763],[985,1000],"'#212121',\n    }",[999,1004],[1113,1160],"'\"Roboto Mono\", \"Courier New\", monospace',\n    }",[1344,1359],"'2.25rem',\n    }",[1449,1458],"700,\n    }",[1547,1557],"1.75,\n    }",[1556,1561],[1674,1684],"'4rem',\n  }",[1778,1790],"'1536px',\n  }",[1966,2007],"'0 20px 25px -5px rgba(0, 0, 0, 0.1)',\n  }",[2121,2133],"'9999px',\n  }",[2263,2271],"1500,\n  }",[2270,2273],"},\n}",[116,257],"import { RequestFormDataWithFiles } from '../components/request/RequestForm/types';\nimport { saveRequest } from '../services/requestService';",[651,665],"'Custom',\n    }",[685,711],"'john.smith@email.com',\n  }",[1006,1028],"'Last 12 months',\n    }",[1048,1079],"'sarah.johnson@company.com',\n  }",[1355,1369],[1389,1417],"'resident@community.org',\n  }",[1719,1739],"'Current year',\n    }",[1759,1799],"'transparency.advocate@watchdog.org',\n  }",[2107,2128],"'Last 6 months',\n    }",[2148,2182],"'property.research@realty.com',\n  }",[2484,2498],[2518,2549],"'legal.inquiry@lawfirm.com',\n  }",[2857,2877],"'Year to date',\n    }",[2897,2937],"'environmental.group@greenwatch.org',\n  }",[2936,2939],[3227,3262],"], // No files for test data\n      }","replaceWithAlt",{"alt":"950"},{"range":"951","text":"952"},"Replace with `&apos;`.",{"alt":"953"},{"range":"954","text":"955"},"Replace with `&lsquo;`.",{"alt":"956"},{"range":"957","text":"958"},"Replace with `&#39;`.",{"alt":"959"},{"range":"960","text":"961"},"Replace with `&rsquo;`.",{"alt":"950"},{"range":"962","text":"963"},{"alt":"953"},{"range":"964","text":"965"},{"alt":"956"},{"range":"966","text":"967"},{"alt":"959"},{"range":"968","text":"969"},{"alt":"950"},{"range":"970","text":"971"},{"alt":"953"},{"range":"972","text":"973"},{"alt":"956"},{"range":"974","text":"975"},{"alt":"959"},{"range":"976","text":"977"},"Update the dependencies array to be: [loadFiltersFromURL]",{"range":"978","text":"979"},"Update the dependencies array to be: [requests, selectedDepartments, selectedStatuses, startDate, endDate, searchQuery, applyFilters]",{"range":"980","text":"981"},"Update the dependencies array to be: [selectedDepartments, selectedStatuses, startDate, endDate, searchQuery, updateURL]",{"range":"982","text":"983"},"&apos;",[492,604],"\n          Submit a request for public records. Fill out the form below and we&apos;ll process your request.\n        ","&lsquo;",[492,604],"\n          Submit a request for public records. Fill out the form below and we&lsquo;ll process your request.\n        ","&#39;",[492,604],"\n          Submit a request for public records. Fill out the form below and we&#39;ll process your request.\n        ","&rsquo;",[492,604],"\n          Submit a request for public records. Fill out the form below and we&rsquo;ll process your request.\n        ",[8696,8870],"\n          If you can&apos;t find your request or have questions about the status, please contact the relevant department directly or call our main office for assistance.\n        ",[8696,8870],"\n          If you can&lsquo;t find your request or have questions about the status, please contact the relevant department directly or call our main office for assistance.\n        ",[8696,8870],"\n          If you can&#39;t find your request or have questions about the status, please contact the relevant department directly or call our main office for assistance.\n        ",[8696,8870],"\n          If you can&rsquo;t find your request or have questions about the status, please contact the relevant department directly or call our main office for assistance.\n        ",[1552,1618],"\n          You don&apos;t have permission to access this page.\n        ",[1552,1618],"\n          You don&lsquo;t have permission to access this page.\n        ",[1552,1618],"\n          You don&#39;t have permission to access this page.\n        ",[1552,1618],"\n          You don&rsquo;t have permission to access this page.\n        ",[2723,2725],"[loadFiltersFromURL]",[4590,4672],"[requests, selectedDepartments, selectedStatuses, startDate, endDate, searchQuery, applyFilters]",[4883,4955],"[selectedDepartments, selectedStatuses, startDate, endDate, searchQuery, updateURL]"]